/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketTotal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketsSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e3f806100206000396000f3fe60806040526004361061009c5760003560e01c8063bc197c8111610064578063bc197c8114610174578063c27a500d146101b9578063ca261ce1146101ce578063d88b24a9146101ee578063e3e5c2b91461021c578063f23a6e611461022f57600080fd5b806301ffc9a7146100a15780633548124b146100d65780636d1884e0146100f8578063806d1a37146101255780638aaf268614610147575b600080fd5b3480156100ad57600080fd5b506100c16100bc3660046119d0565b61025b565b60405190151581526020015b60405180910390f35b3480156100e257600080fd5b506100eb61026c565b6040516100cd9190611bcb565b34801561010457600080fd5b50610118610113366004611a64565b6104e0565b6040516100cd9190611cf6565b34801561013157600080fd5b50610145610140366004611a94565b610643565b005b34801561015357600080fd5b5061016761016236600461187d565b6109bf565b6040516100cd9190611c2c565b34801561018057600080fd5b506101a061018f366004611897565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100cd565b3480156101c557600080fd5b506100eb610c6b565b3480156101da57600080fd5b506101676101e9366004611a64565b610ee0565b3480156101fa57600080fd5b5061020e6102093660046119f8565b61109a565b6040519081526020016100cd565b61014561022a36600461199e565b61122e565b34801561023b57600080fd5b506101a061024a36600461193c565b63f23a6e6160e01b95945050505050565b60006102668261160d565b92915050565b6060600061027960015490565b905060008060005b838110156102dc573360036000610299846001611d39565b81526020810191909152604001600020600501546001600160a01b031614156102ca576102c7600184611d39565b92505b806102d481611dc2565b915050610281565b506000826001600160401b0381111561030557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561033e57816020015b61032b611642565b8152602001906001900390816103235790505b50905060005b848110156104d757336003600061035c846001611d39565b81526020810191909152604001600020600501546001600160a01b031614156104c557600061038c826001611d39565b90506000600360008381526020019081526020016000209050806040518060c0016040529081600082015481526020016001820180546103cb90611d87565b80601f01602080910402602001604051908101604052809291908181526020018280546103f790611d87565b80156104445780601f1061041957610100808354040283529160200191610444565b820191906000526020600020905b81548152906001019060200180831161042757829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b031660809091015284518590879081106104aa57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104c0600186611d39565b945050505b806104cf81611dc2565b915050610344565b50949350505050565b6104e8611642565b6000828152600360205260409020546105485760405162461bcd60e51b815260206004820152601960248201527f54686973206576656e7420646f6573206e6f742065786973740000000000000060448201526064015b60405180910390fd5b600360008381526020019081526020016000206040518060c00160405290816000820154815260200160018201805461058090611d87565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac90611d87565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b031660809091015292915050565b600081116106935760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c6561737420312077656900000000604482015260640161053f565b604051627eeac760e11b81523360048201526024810186905282906001600160a01b0386169062fdd58e9060440160206040518083038186803b1580156106d957600080fd5b505afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107119190611a7c565b101561077c5760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b606482015260840161053f565b6000868152600360205260409020600501546001600160a01b031633146107e55760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e7400000000000000604482015260640161053f565b6000868152600360205260409020600201546001600160401b03908116429091161061084e5760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161053f565b61085c600080546001019055565b6040805160c08101825286815260208082018981523383850181815260608501878152608086018a815260a087018a815260008e8152600497889052899020975188559451600188015591516002870180546001600160a01b0319166001600160a01b039283161790559051600387015590518585015591516005909401939093559251637921219560e11b81529287169263f242432a9261090692909130918b91899101611b93565b600060405180830381600087803b15801561092057600080fd5b505af1158015610934573d6000803e3d6000fd5b5050506000878152600360208190526040909120015461095691508390611d39565b600087815260036020818152604092839020909101929092558051338152918201839052810184905260608101839052869086907f6bb5861eb6dc88b7c26ba9614d4c5a07978638a2fd2f71b64e8d1cb85f3311af9060800160405180910390a3505050505050565b606060006109cc60005490565b905060008060005b83811015610a985760016001600160a01b03871662fdd58e336109f78585611d39565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610a3b57600080fd5b505afa158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a739190611a7c565b10610a8657610a83600184611d39565b92505b80610a9081611dc2565b9150506109d4565b506000826001600160401b03811115610ac157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610afa57816020015b610ae761168a565b815260200190600190039081610adf5790505b50905060005b84811015610c615760016001600160a01b03881662fdd58e33610b238585611d39565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610b6757600080fd5b505afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611a7c565b10610c4f576000610bb1826001611d39565b600081815260046020818152604092839020835160c0810185528154815260018201549281019290925260028101546001600160a01b03169382019390935260038301546060820152908201546080820152600582015460a082015285519293509091859087908110610c3457634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610c4a600186611d39565b945050505b80610c5981611dc2565b915050610b00565b5095945050505050565b60606000610c7860015490565b905060008060005b83811015610ce05760036000610c97836001611d39565b81526020810191909152604001600020600201546001600160401b03908116429091161015610cce57610ccb600184611d39565b92505b80610cd881611dc2565b915050610c80565b506000826001600160401b03811115610d0957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610d4257816020015b610d2f611642565b815260200190600190039081610d275790505b50905060005b848110156104d75760036000610d5f836001611d39565b81526020810191909152604001600020600201546001600160401b03908116429091161015610ece576000610d95826001611d39565b90506000600360008381526020019081526020016000209050806040518060c001604052908160008201548152602001600182018054610dd490611d87565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0090611d87565b8015610e4d5780601f10610e2257610100808354040283529160200191610e4d565b820191906000526020600020905b815481529060010190602001808311610e3057829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b03166080909101528451859087908110610eb357634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610ec9600186611d39565b945050505b80610ed881611dc2565b915050610d48565b60606000610eed60005490565b905060008060005b83811015610f45578560046000610f0d846001611d39565b8152602001908152602001600020600101541415610f3357610f30600184611d39565b92505b80610f3d81611dc2565b915050610ef5565b506000826001600160401b03811115610f6e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610fa757816020015b610f9461168a565b815260200190600190039081610f8c5790505b50905060005b84811015610c61578660046000610fc5846001611d39565b8152602001908152602001600020600101541415611088576000610fea826001611d39565b600081815260046020818152604092839020835160c0810185528154815260018201549281019290925260028101546001600160a01b03169382019390935260038301546060820152908201546080820152600582015460a08201528551929350909185908790811061106d57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152611083600186611d39565b945050505b8061109281611dc2565b915050610fad565b6000336110a657600080fd5b816001600160401b0316426001600160401b0316106111075760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c726561647920706173736564000000000000000000604482015260640161053f565b611115600180546001019055565b600061112060015490565b6040805160c08101825282815260208082018881526001600160401b03881683850152600060608401819052608084018190523360a085015285815260038352939093208251815592518051949550919361118192600185019201906116c9565b5060408281015160028301805467ffffffffffffffff19166001600160401b03909216919091179055606083015160038301556080830151600483015560a090920151600590910180546001600160a01b0319166001600160a01b039092169190911790555181907fe798e3d1c981dccaa805cf4220c73e55a59c9fa14d08e15cb196809ca6576abb9061121f908790879060009081903390611cad565b60405180910390a29392505050565b60008281526004602081905260409182902060038101548183015460018301546002909301549451627eeac760e11b8152309481019490945260248401879052909390926001600160a01b039182169188169062fdd58e9060440160206040518083038186803b1580156112a157600080fd5b505afa1580156112b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d99190611a7c565b8511156113405760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b606482015260840161053f565b604051627eeac760e11b8152336004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b15801561138457600080fd5b505afa158015611398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bc9190611a7c565b6113c69084611d70565b85111561144f5760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a40161053f565b6114598585611d51565b341461149f5760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b604482015260640161053f565b600086815260046020908152604080832060010154835260039091529020600201546001600160401b0390811642909116106115185760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161053f565b60008681526004602081905260409182902060020180546001600160a01b03191690559051637921219560e11b81526001600160a01b0389169163f242432a9161156a91309133918c918c9101611b93565b600060405180830381600087803b15801561158457600080fd5b505af1158015611598573d6000803e3d6000fd5b5050506000838152600360205260409020600401546115b991508690611d39565b6000838152600360205260408082206004019290925590516001600160a01b038316913480156108fc02929091818181858888f19350505050158015611603573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b148061026657506301ffc9a760e01b6001600160e01b0319831614610266565b6040518060c00160405280600081526020016060815260200160006001600160401b03168152602001600081526020016000815260200160006001600160a01b031681525090565b6040518060c00160405280600081526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b8280546116d590611d87565b90600052602060002090601f0160209004810192826116f7576000855561173d565b82601f1061171057805160ff191683800117855561173d565b8280016001018555821561173d579182015b8281111561173d578251825591602001919060010190611722565b5061174992915061174d565b5090565b5b80821115611749576000815560010161174e565b60006001600160401b0383111561177b5761177b611df3565b61178e601f8401601f1916602001611d09565b90508281528383830111156117a257600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146117d057600080fd5b919050565b600082601f8301126117e5578081fd5b813560206001600160401b0382111561180057611800611df3565b8160051b61180f828201611d09565b838152828101908684018388018501891015611829578687fd5b8693505b8584101561184b57803583526001939093019291840191840161182d565b50979650505050505050565b600082601f830112611867578081fd5b61187683833560208501611762565b9392505050565b60006020828403121561188e578081fd5b611876826117b9565b600080600080600060a086880312156118ae578081fd5b6118b7866117b9565b94506118c5602087016117b9565b935060408601356001600160401b03808211156118e0578283fd5b6118ec89838a016117d5565b94506060880135915080821115611901578283fd5b61190d89838a016117d5565b93506080880135915080821115611922578283fd5b5061192f88828901611857565b9150509295509295909350565b600080600080600060a08688031215611953578081fd5b61195c866117b9565b945061196a602087016117b9565b9350604086013592506060860135915060808601356001600160401b03811115611992578182fd5b61192f88828901611857565b6000806000606084860312156119b2578283fd5b6119bb846117b9565b95602085013595506040909401359392505050565b6000602082840312156119e1578081fd5b81356001600160e01b031981168114611876578182fd5b60008060408385031215611a0a578182fd5b82356001600160401b0380821115611a20578384fd5b818501915085601f830112611a33578384fd5b611a4286833560208501611762565b9350602085013591508082168214611a58578283fd5b50809150509250929050565b600060208284031215611a75578081fd5b5035919050565b600060208284031215611a8d578081fd5b5051919050565b60008060008060008060c08789031215611aac578081fd5b8635955060208701359450611ac3604088016117b9565b9350606087013592506080870135915060a087013590509295509295509295565b60008151808452815b81811015611b0957602081850181015186830182015201611aed565b81811115611b1a5782602083870101525b50601f01601f19169290920160200192915050565b805182526000602082015160c06020850152611b4e60c0850182611ae4565b6040848101516001600160401b031690860152606080850151908601526080808501519086015260a0938401516001600160a01b031693909401929092525090919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015611c1f57603f19888603018452611c0d858351611b2f565b94509285019290850190600101611bf1565b5092979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015611ca0578151805185528681015187860152858101516001600160a01b031686860152606080820151908601526080808201519086015260a0908101519085015260c09093019290850190600101611c49565b5091979650505050505050565b60a081526000611cc060a0830188611ae4565b6001600160401b0396909616602083015250604081019390935260608301919091526001600160a01b0316608090910152919050565b6020815260006118766020830184611b2f565b604051601f8201601f191681016001600160401b0381118282101715611d3157611d31611df3565b604052919050565b60008219821115611d4c57611d4c611ddd565b500190565b6000816000190483118215151615611d6b57611d6b611ddd565b500290565b600082821015611d8257611d82611ddd565b500390565b600181811c90821680611d9b57607f821691505b60208210811415611dbc57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611dd657611dd6611ddd565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200a8cc97bc89e35ef55683b0f111eca86b6db12e60cf6b586096941cd8a4ed8a264736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
