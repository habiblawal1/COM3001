/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "eventStartDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUri",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "eventStartDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "eventStartDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "eventStartDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121e2806100206000396000f3fe6080604052600436106100915760003560e01c8063ca261ce111610059578063ca261ce114610175578063de3a538b146101a2578063e1d10d85146101c2578063e3e5c2b9146101d7578063f23a6e61146101ec57600080fd5b806301ffc9a7146100965780633548124b146100cb578063806d1a37146100ed578063bc197c811461011b578063c27a500d14610160575b600080fd5b3480156100a257600080fd5b506100b66100b1366004611c93565b610218565b60405190151581526020015b60405180910390f35b3480156100d757600080fd5b506100e0610229565b6040516100c29190611e86565b3480156100f957600080fd5b5061010d610108366004611db3565b610651565b6040519081526020016100c2565b34801561012757600080fd5b50610147610136366004611b5a565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100c2565b34801561016c57600080fd5b506100e0610a03565b34801561018157600080fd5b50610195610190366004611d83565b610e1e565b6040516100c29190611f7d565b3480156101ae57600080fd5b5061010d6101bd366004611cc2565b611078565b3480156101ce57600080fd5b5061019561124b565b6101ea6101e5366004611c61565b611445565b005b3480156101f857600080fd5b50610147610207366004611bff565b63f23a6e6160e01b95945050505050565b6000610223826118d5565b92915050565b6060600061023660015490565b905060008060005b838110156102a05733600360006102568460016120dc565b8152602081019190915260400160002060050154600160401b90046001600160a01b0316141561028e5761028b6001846120dc565b92505b8061029881612165565b91505061023e565b506000826001600160401b038111156102c957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561030257816020015b6102ef61190a565b8152602001906001900390816102e75790505b50905060005b848110156106485733600360006103208460016120dc565b8152602081019190915260400160002060050154600160401b90046001600160a01b031614156106365760006103578260016120dc565b90506000600360008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820180546103969061212a565b80601f01602080910402602001604051908101604052809291908181526020018280546103c29061212a565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b505050505081526020016002820180546104289061212a565b80601f01602080910402602001604051908101604052809291908181526020018280546104549061212a565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b505050505081526020016003820180546104ba9061212a565b80601f01602080910402602001604051908101604052809291908181526020018280546104e69061212a565b80156105335780601f1061050857610100808354040283529160200191610533565b820191906000526020600020905b81548152906001019060200180831161051657829003601f168201915b5050505050815260200160048201805461054c9061212a565b80601f01602080910402602001604051908101604052809291908181526020018280546105789061212a565b80156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b5050509183525050600591909101546001600160401b0381166020830152600160401b90046001600160a01b0316604090910152845185908790811061061b57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526106316001866120dc565b945050505b8061064081612165565b915050610308565b50949350505050565b60008082116106a75760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c656173742031207765690000000060448201526064015b60405180910390fd5b604051627eeac760e11b81523360048201526024810187905283906001600160a01b0387169062fdd58e9060440160206040518083038186803b1580156106ed57600080fd5b505afa158015610701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190611d9b565b10156107905760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b606482015260840161069e565b600087815260036020526040902060050154600160401b90046001600160a01b031633146108005760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e7400000000000000604482015260640161069e565b6000878152600360205260409020600501546001600160401b0390811642909116106108695760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161069e565b610877600080546001019055565b60008054604080516101208101825289815260208082018481528284018d815233606085018181526080860189815260a087018c815260c088018f815260e089018f81526101008a018d81528c8e526004998a90529c8b902099518a55965160018a01559451600289015591516003880180546001600160a01b03199081166001600160a01b0393841617909155915188880180549093169082161790915590516005870155915160068601559151600785015595516008909301805460ff1916931515939093179092559151637921219560e11b8152929389169263f242432a9261096a929130918d918b9101611e4e565b600060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505060408051338152600060208201819052818301889052606082018a90526080820189905260a082015290518b93508492508a917f369ee61b7ab80588e88d714924baac765296fab2dfd6bed28e0addc82fefe2d2919081900360c00190a4979650505050505050565b60606000610a1060015490565b905060008060005b83811015610a785760036000610a2f8360016120dc565b81526020810191909152604001600020600501546001600160401b03908116429091161015610a6657610a636001846120dc565b92505b80610a7081612165565b915050610a18565b506000826001600160401b03811115610aa157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610ada57816020015b610ac761190a565b815260200190600190039081610abf5790505b50905060005b848110156106485760036000610af78360016120dc565b81526020810191909152604001600020600501546001600160401b03908116429091161015610e0c576000610b2d8260016120dc565b90506000600360008381526020019081526020016000209050806040518060e001604052908160008201548152602001600182018054610b6c9061212a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b989061212a565b8015610be55780601f10610bba57610100808354040283529160200191610be5565b820191906000526020600020905b815481529060010190602001808311610bc857829003601f168201915b50505050508152602001600282018054610bfe9061212a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2a9061212a565b8015610c775780601f10610c4c57610100808354040283529160200191610c77565b820191906000526020600020905b815481529060010190602001808311610c5a57829003601f168201915b50505050508152602001600382018054610c909061212a565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbc9061212a565b8015610d095780601f10610cde57610100808354040283529160200191610d09565b820191906000526020600020905b815481529060010190602001808311610cec57829003601f168201915b50505050508152602001600482018054610d229061212a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4e9061212a565b8015610d9b5780601f10610d7057610100808354040283529160200191610d9b565b820191906000526020600020905b815481529060010190602001808311610d7e57829003601f168201915b5050509183525050600591909101546001600160401b0381166020830152600160401b90046001600160a01b03166040909101528451859087908110610df157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610e076001866120dc565b945050505b80610e1681612165565b915050610ae0565b60606000610e2b60005490565b905060008060005b83811015610eb9578560046000610e4b8460016120dc565b815260200190815260200160002060020154148015610e9457506000600481610e758460016120dc565b81526020810191909152604001600020600401546001600160a01b0316145b15610ea757610ea46001846120dc565b92505b80610eb181612165565b915050610e33565b506000826001600160401b03811115610ee257634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f1b57816020015b610f08611959565b815260200190600190039081610f005790505b50905060005b8481101561106e578660046000610f398460016120dc565b815260200190815260200160002060020154148015610f8257506000600481610f638460016120dc565b81526020810191909152604001600020600401546001600160a01b0316145b1561105c576000610f948260016120dc565b6000818152600460208181526040928390208351610120810185528154815260018201549281019290925260028101549382019390935260038301546001600160a01b039081166060830152918301549091166080820152600582015460a0820152600682015460c0820152600782015460e0820152600882015460ff1615156101008201528551929350909185908790811061104157634e487b7160e01b600052603260045260246000fd5b60209081029190910101526110576001866120dc565b945050505b8061106681612165565b915050610f21565b5095945050505050565b60003361108457600080fd5b816001600160401b0316426001600160401b0316106110e55760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c726561647920706173736564000000000000000000604482015260640161069e565b6110f3600180546001019055565b60006110fe60015490565b6040805160e08101825282815260208082018b81528284018b9052606083018a9052608083018990526001600160401b03881660a08401523360c0840152600085815260038352939093208251815592518051949550919361116692600185019201906119b9565b50604082015180516111829160028401916020909101906119b9565b506060820151805161119e9160038401916020909101906119b9565b50608082015180516111ba9160048401916020909101906119b9565b5060a08201516005909101805460c0909301516001600160a01b0316600160401b026001600160e01b03199093166001600160401b039092169190911791909117905560405181907ff7861de123da6b89c2d15999677111443491be21863452fefc7696c959ccfaad90611239908a908a908a908a908a903390612032565b60405180910390a29695505050505050565b6060600061125860005490565b905060008060005b838110156112bb5733600460006112788460016120dc565b81526020810191909152604001600020600401546001600160a01b031614156112a9576112a66001846120dc565b92505b806112b381612165565b915050611260565b506000826001600160401b038111156112e457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561131d57816020015b61130a611959565b8152602001906001900390816113025790505b50905060005b8481101561064857336004600061133b8460016120dc565b81526020810191909152604001600020600401546001600160a01b0316141561143357600061136b8260016120dc565b6000818152600460208181526040928390208351610120810185528154815260018201549281019290925260028101549382019390935260038301546001600160a01b039081166060830152918301549091166080820152600582015460a0820152600682015460c0820152600782015460e0820152600882015460ff1615156101008201528551929350909185908790811061141857634e487b7160e01b600052603260045260246000fd5b602090810291909101015261142e6001866120dc565b945050505b8061143d81612165565b915050611323565b6000828152600460208190526040918290206005810154815460068301546003909301549451627eeac760e11b8152309481019490945260248401879052909390926001600160a01b03918216916001919089169062fdd58e9060440160206040518083038186803b1580156114ba57600080fd5b505afa1580156114ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f29190611d9b565b10156115355760405162461bcd60e51b8152602060048201526012602482015271233937b69036bab9ba1031329037bbb732b960711b604482015260640161069e565b604051627eeac760e11b8152306004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b15801561157957600080fd5b505afa15801561158d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b19190611d9b565b8511156116185760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b606482015260840161069e565b604051627eeac760e11b8152336004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b15801561165c57600080fd5b505afa158015611670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116949190611d9b565b61169e9083612113565b8511156117275760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a40161069e565b61173185856120f4565b34146117775760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b604482015260640161069e565b600086815260046020908152604080832060020154835260039091529020600501546001600160401b0390811642909116106117f05760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161069e565b6000868152600460208190526040918290208082018054336001600160a01b0319918216811790925560088301805460ff19166001179055600390920180549092169091559151637921219560e11b81526001600160a01b038a169263f242432a926118639230929189918c9101611e4e565b600060405180830381600087803b15801561187d57600080fd5b505af1158015611891573d6000803e3d6000fd5b50506040516001600160a01b03841692503480156108fc029250906000818181858888f193505050501580156118cb573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b148061022357506301ffc9a760e01b6001600160e01b0319831614610223565b6040518060e00160405280600081526020016060815260200160608152602001606081526020016060815260200160006001600160401b0316815260200160006001600160a01b031681525090565b60405180610120016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b8280546119c59061212a565b90600052602060002090601f0160209004810192826119e75760008555611a2d565b82601f10611a0057805160ff1916838001178555611a2d565b82800160010185558215611a2d579182015b82811115611a2d578251825591602001919060010190611a12565b50611a39929150611a3d565b5090565b5b80821115611a395760008155600101611a3e565b80356001600160a01b0381168114611a6957600080fd5b919050565b600082601f830112611a7e578081fd5b813560206001600160401b03821115611a9957611a99612196565b8160051b611aa88282016120ac565b838152828101908684018388018501891015611ac2578687fd5b8693505b85841015611ae4578035835260019390930192918401918401611ac6565b50979650505050505050565b600082601f830112611b00578081fd5b81356001600160401b03811115611b1957611b19612196565b611b2c601f8201601f19166020016120ac565b818152846020838601011115611b40578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215611b71578081fd5b611b7a86611a52565b9450611b8860208701611a52565b935060408601356001600160401b0380821115611ba3578283fd5b611baf89838a01611a6e565b94506060880135915080821115611bc4578283fd5b611bd089838a01611a6e565b93506080880135915080821115611be5578283fd5b50611bf288828901611af0565b9150509295509295909350565b600080600080600060a08688031215611c16578081fd5b611c1f86611a52565b9450611c2d60208701611a52565b9350604086013592506060860135915060808601356001600160401b03811115611c55578182fd5b611bf288828901611af0565b600080600060608486031215611c75578283fd5b611c7e84611a52565b95602085013595506040909401359392505050565b600060208284031215611ca4578081fd5b81356001600160e01b031981168114611cbb578182fd5b9392505050565b600080600080600060a08688031215611cd9578081fd5b85356001600160401b0380821115611cef578283fd5b611cfb89838a01611af0565b96506020880135915080821115611d10578283fd5b611d1c89838a01611af0565b95506040880135915080821115611d31578283fd5b611d3d89838a01611af0565b94506060880135915080821115611d52578283fd5b611d5e89838a01611af0565b9350608088013591508082168214611d74578283fd5b50809150509295509295909350565b600060208284031215611d94578081fd5b5035919050565b600060208284031215611dac578081fd5b5051919050565b60008060008060008060c08789031215611dcb578081fd5b8635955060208701359450611de260408801611a52565b9350606087013592506080870135915060a087013590509295509295509295565b60008151808452815b81811015611e2857602081850181015186830182015201611e0c565b81811115611e395782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015611f6f57603f19898403018552815160e08151855288820151818a870152611eda82870182611e03565b9150508782015185820389870152611ef28282611e03565b91505060608083015186830382880152611f0c8382611e03565b9250505060808083015186830382880152611f278382611e03565b9250505060a06001600160401b038184015116818701525060c0808301519250611f5b818701846001600160a01b03169052565b509588019593505090860190600101611eac565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561202557815180518552868101518786015285810151868601526060808201516001600160a01b031690860152608080820151611fe5828801826001600160a01b03169052565b505060a0818101519086015260c0808201519086015260e08082015190860152610100908101511515908501526101209093019290850190600101611f9a565b5091979650505050505050565b60c08152600061204560c0830189611e03565b82810360208401526120578189611e03565b9050828103604084015261206b8188611e03565b9050828103606084015261207f8187611e03565b6001600160401b0395909516608084015250506001600160a01b039190911660a090910152949350505050565b604051601f8201601f191681016001600160401b03811182821017156120d4576120d4612196565b604052919050565b600082198211156120ef576120ef612180565b500190565b600081600019048311821515161561210e5761210e612180565b500290565b60008282101561212557612125612180565b500390565b600181811c9082168061213e57607f821691505b6020821081141561215f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561217957612179612180565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122027c1255b3267609f28197066b99a05c904de2968360128e2d442c90d89d2230964736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
