/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketTotal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketsSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royaltyFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxResalePrice",
        type: "uint256",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "resaleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "resalePrice",
        type: "uint256",
      },
    ],
    name: "ResaleTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royaltyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxResalePrice",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royaltyFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxResalePrice",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royaltyFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxResalePrice",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getResaleTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "resaleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "resalePrice",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.ResaleTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listOnResale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "validateTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612780806100206000396000f3fe6080604052600436106100dd5760003560e01c8063bc197c811161007f578063d686c53011610059578063d686c5301461027d578063d88b24a9146102aa578063e3e5c2b9146102ca578063f23a6e61146102dd57600080fd5b8063bc197c8114610203578063c27a500d14610248578063ca261ce11461025d57600080fd5b80636d1884e0116100bb5780636d1884e0146101675780638a0e7a3c146101945780638aaf2686146101b6578063aa1a3e6d146101e357600080fd5b806301ffc9a7146100e25780633548124b1461011757806343f2313214610139575b600080fd5b3480156100ee57600080fd5b506101026100fd36600461228a565b610309565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c61031a565b60405161010e9190612497565b34801561014557600080fd5b50610159610154366004612258565b61058e565b60405190815260200161010e565b34801561017357600080fd5b5061018761018236600461231e565b610831565b60405161010e9190612637565b3480156101a057600080fd5b506101b46101af3660046121bb565b61098f565b005b3480156101c257600080fd5b506101d66101d13660046120fc565b610bb4565b60405161010e91906124f8565b3480156101ef57600080fd5b506101b46101fe36600461234e565b610e75565b34801561020f57600080fd5b5061022f61021e366004612116565b63bc197c8160e01b95945050505050565b6040516001600160e01b0319909116815260200161010e565b34801561025457600080fd5b5061012c6112d6565b34801561026957600080fd5b506101d661027836600461231e565b61154b565b34801561028957600080fd5b5061029d61029836600461231e565b61171a565b60405161010e919061258e565b3480156102b657600080fd5b506101596102c53660046122b2565b6118ed565b6101b46102d8366004612258565b611a81565b3480156102e957600080fd5b5061022f6102f83660046121f6565b63f23a6e6160e01b95945050505050565b600061031482611e7d565b92915050565b6060600061032760015490565b905060008060005b8381101561038a57336004600061034784600161267a565b81526020810191909152604001600020600501546001600160a01b031614156103785761037560018461267a565b92505b8061038281612703565b91505061032f565b506000826001600160401b038111156103b357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156103ec57816020015b6103d9611eb2565b8152602001906001900390816103d15790505b50905060005b8481101561058557336004600061040a84600161267a565b81526020810191909152604001600020600501546001600160a01b0316141561057357600061043a82600161267a565b90506000600460008381526020019081526020016000209050806040518060c001604052908160008201548152602001600182018054610479906126c8565b80601f01602080910402602001604051908101604052809291908181526020018280546104a5906126c8565b80156104f25780601f106104c7576101008083540402835291602001916104f2565b820191906000526020600020905b8154815290600101906020018083116104d557829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b0316608090910152845185908790811061055857634e487b7160e01b600052603260045260246000fd5b602090810291909101015261056e60018661267a565b945050505b8061057d81612703565b9150506103f2565b50949350505050565b604051627eeac760e11b81523360048201526024810183905260009081906001600160a01b0386169062fdd58e9060440160206040518083038186803b1580156105d757600080fd5b505afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190612336565b1161067a5760405162461bcd60e51b815260206004820152603060248201527f596f7520646f206e6f74206f776e20746865207469636b657420796f7520617260448201526f19481d1c9e5a5b99c81d1bc81b1a5cdd60821b60648201526084015b60405180910390fd5b60008381526005602052604090206007015482111561070d5760405162461bcd60e51b815260206004820152604360248201527f526573616c652070726963652073686f756c64206e6f7420657863656564207460448201527f6865206d617820726573616c6520707269636520666f722074686973207469636064820152621ad95d60ea1b608482015260a401610671565b61071b600280546001019055565b600061072660025490565b60408051608081018252828152602080820188815233838501818152606085018a8152600088815260069095529386902094518555915160018086019190915591516002850180546001600160a01b0319166001600160a01b0392831617905592516003909401939093559251637921219560e11b815293945088169263f242432a926107ba929130918a9160040161245f565b600060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b505060408051338152602081018790528793508492507f85a73944b28508ec75ebb24cb4de0775ab84676d80f55c6b2d2bf097cf9f2239910160405180910390a3949350505050565b610839611eb2565b6000828152600460205260409020546108945760405162461bcd60e51b815260206004820152601960248201527f54686973206576656e7420646f6573206e6f74206578697374000000000000006044820152606401610671565b600460008381526020019081526020016000206040518060c0016040529081600082015481526020016001820180546108cc906126c8565b80601f01602080910402602001604051908101604052809291908181526020018280546108f8906126c8565b80156109455780601f1061091a57610100808354040283529160200191610945565b820191906000526020600020905b81548152906001019060200180831161092857829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b031660809091015292915050565b6000818152600560208181526040808420600101548452600490915290912001546001600160a01b03163314610a385760405162461bcd60e51b815260206004820152604260248201527f596f7520646f206e6f7420746865206f776e20746865206576656e7420666f7260448201527f20746865207469636b657420747279696e6720746f2062652076616c69646174606482015261195960f21b608482015260a401610671565b604051627eeac760e11b81526001600160a01b038381166004830152602482018390526000919085169062fdd58e9060440160206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aba9190612336565b11610b075760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320646f6573206e6f74206f776e20746f6b656e0000000000006044820152606401610671565b60008181526007602090815260408083206001600160a01b038616845290915290205460ff1615610b845760405162461bcd60e51b815260206004820152602160248201527f557365722068617320616c72656164792076616c696461746564207469636b656044820152601d60fa1b6064820152608401610671565b60009081526007602090815260408083206001600160a01b03909416835292905220805460ff1916600117905550565b60606000610bc160005490565b905060008060005b83811015610c8d5760016001600160a01b03871662fdd58e33610bec858561267a565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610c3057600080fd5b505afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190612336565b10610c7b57610c7860018461267a565b92505b80610c8581612703565b915050610bc9565b506000826001600160401b03811115610cb657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610cef57816020015b610cdc611efa565b815260200190600190039081610cd45790505b50905060005b84811015610e6b5760016001600160a01b03881662fdd58e33610d18858561267a565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610d5c57600080fd5b505afa158015610d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d949190612336565b10610e59576000610da682600161267a565b6000818152600560208181526040928390208351610100810185528154815260018201549281019290925260028101546001600160a01b03169382019390935260038301546060820152600483015460808201529082015460a0820152600682015460c0820152600782015460e082015285519293509091859087908110610e3e57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610e5460018661267a565b945050505b80610e6381612703565b915050610cf5565b5095945050505050565b60008311610ec55760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c65617374203120776569000000006044820152606401610671565b604051627eeac760e11b81523360048201526024810188905284906001600160a01b0388169062fdd58e9060440160206040518083038186803b158015610f0b57600080fd5b505afa158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190612336565b1015610fae5760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b6064820152608401610671565b6000888152600460205260409020600501546001600160a01b031633146110175760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e74000000000000006044820152606401610671565b6000888152600460205260409020600201546001600160401b0390811642909116106110805760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b6044820152606401610671565b60648211156111025760405162461bcd60e51b815260206004820152604260248201527f526f79616c747920666565206d75737420626520612070657263656e7461676560448201527f2c207468657265666f72652063616e2774206265206d6f7265207468616e2031606482015261030360f41b608482015260a401610671565b611110600080546001019055565b604051806101000160405280888152602001898152602001336001600160a01b031681526020018481526020018681526020018581526020018381526020018281525060056000898152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155905050856001600160a01b031663f242432a33308a886040518563ffffffff1660e01b815260040161120e949392919061245f565b600060405180830381600087803b15801561122857600080fd5b505af115801561123c573d6000803e3d6000fd5b50505060008981526004602052604090206003015461125d9150859061267a565b6000898152600460209081526040918290206003019290925580513381529182018590528101869052606081018590526080810183905260a08101829052889088907f3cd9f3a4cc251e90d3e405477e5439f30765db80c8e77f84d9f829633dd011429060c00160405180910390a35050505050505050565b606060006112e360015490565b905060008060005b8381101561134b576004600061130283600161267a565b81526020810191909152604001600020600201546001600160401b039081164290911610156113395761133660018461267a565b92505b8061134381612703565b9150506112eb565b506000826001600160401b0381111561137457634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156113ad57816020015b61139a611eb2565b8152602001906001900390816113925790505b50905060005b8481101561058557600460006113ca83600161267a565b81526020810191909152604001600020600201546001600160401b0390811642909116101561153957600061140082600161267a565b90506000600460008381526020019081526020016000209050806040518060c00160405290816000820154815260200160018201805461143f906126c8565b80601f016020809104026020016040519081016040528092919081815260200182805461146b906126c8565b80156114b85780601f1061148d576101008083540402835291602001916114b8565b820191906000526020600020905b81548152906001019060200180831161149b57829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b0316608090910152845185908790811061151e57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261153460018661267a565b945050505b8061154381612703565b9150506113b3565b6060600061155860005490565b905060008060005b838110156115b057856005600061157884600161267a565b815260200190815260200160002060010154141561159e5761159b60018461267a565b92505b806115a881612703565b915050611560565b506000826001600160401b038111156115d957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561161257816020015b6115ff611efa565b8152602001906001900390816115f75790505b50905060005b84811015610e6b57866005600061163084600161267a565b815260200190815260200160002060010154141561170857600061165582600161267a565b6000818152600560208181526040928390208351610100810185528154815260018201549281019290925260028101546001600160a01b03169382019390935260038301546060820152600483015460808201529082015460a0820152600682015460c0820152600782015460e0820152855192935090918590879081106116ed57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261170360018661267a565b945050505b8061171281612703565b915050611618565b6060600061172760025490565b905060008060005b8381101561177f57856006600061174784600161267a565b815260200190815260200160002060010154141561176d5761176a60018461267a565b92505b8061177781612703565b91505061172f565b506000826001600160401b038111156117a857634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561180d57816020015b6117fa6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001600081525090565b8152602001906001900390816117c65790505b50905060005b84811015610e6b57866006600061182b84600161267a565b81526020019081526020016000206001015414156118db57600061185082600161267a565b60008181526006602090815260409182902082516080810184528154815260018201549281019290925260028101546001600160a01b03169282019290925260038201546060820152855192935090918590879081106118c057634e487b7160e01b600052603260045260246000fd5b60209081029190910101526118d660018661267a565b945050505b806118e581612703565b915050611813565b6000336118f957600080fd5b816001600160401b0316426001600160401b03161061195a5760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c7265616479207061737365640000000000000000006044820152606401610671565b611968600180546001019055565b600061197360015490565b6040805160c08101825282815260208082018881526001600160401b03881683850152600060608401819052608084018190523360a08501528581526004835293909320825181559251805194955091936119d49260018501920190611f48565b5060408281015160028301805467ffffffffffffffff19166001600160401b03909216919091179055606083015160038301556080830151600483015560a090920151600590910180546001600160a01b0319166001600160a01b039092169190911790555181907fe798e3d1c981dccaa805cf4220c73e55a59c9fa14d08e15cb196809ca6576abb90611a729087908790600090819033906125ee565b60405180910390a29392505050565b60008281526005602052604090819020600381015460048083015460018401546002909401549451627eeac760e11b815230928101929092526024820187905291939192916001600160a01b03908116919088169062fdd58e9060440160206040518083038186803b158015611af657600080fd5b505afa158015611b0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2e9190612336565b851115611b955760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b6064820152608401610671565b604051627eeac760e11b8152336004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b158015611bd957600080fd5b505afa158015611bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c119190612336565b611c1b90846126b1565b851115611ca45760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a401610671565b611cae8585612692565b3414611cf45760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b6044820152606401610671565b600086815260056020908152604080832060010154835260049091529020600201546001600160401b039081164290911610611d6d5760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b6044820152606401610671565b600086815260056020908152604080832060020180546001600160a01b03191690556007825280832033808552925291829020805460ff191690559051637921219560e11b81526001600160a01b0389169163f242432a91611dd79130918b908b9060040161245f565b600060405180830381600087803b158015611df157600080fd5b505af1158015611e05573d6000803e3d6000fd5b50505060008381526004602081905260409091200154611e279150869061267a565b60008381526004602081905260408083209091019290925590516001600160a01b038316913480156108fc02929091818181858888f19350505050158015611e73573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b148061031457506301ffc9a760e01b6001600160e01b0319831614610314565b6040518060c00160405280600081526020016060815260200160006001600160401b03168152602001600081526020016000815260200160006001600160a01b031681525090565b604051806101000160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054611f54906126c8565b90600052602060002090601f016020900481019282611f765760008555611fbc565b82601f10611f8f57805160ff1916838001178555611fbc565b82800160010185558215611fbc579182015b82811115611fbc578251825591602001919060010190611fa1565b50611fc8929150611fcc565b5090565b5b80821115611fc85760008155600101611fcd565b60006001600160401b03831115611ffa57611ffa612734565b61200d601f8401601f191660200161264a565b905082815283838301111561202157600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461204f57600080fd5b919050565b600082601f830112612064578081fd5b813560206001600160401b0382111561207f5761207f612734565b8160051b61208e82820161264a565b8381528281019086840183880185018910156120a8578687fd5b8693505b858410156120ca5780358352600193909301929184019184016120ac565b50979650505050505050565b600082601f8301126120e6578081fd5b6120f583833560208501611fe1565b9392505050565b60006020828403121561210d578081fd5b6120f582612038565b600080600080600060a0868803121561212d578081fd5b61213686612038565b945061214460208701612038565b935060408601356001600160401b038082111561215f578283fd5b61216b89838a01612054565b94506060880135915080821115612180578283fd5b61218c89838a01612054565b935060808801359150808211156121a1578283fd5b506121ae888289016120d6565b9150509295509295909350565b6000806000606084860312156121cf578283fd5b6121d884612038565b92506121e660208501612038565b9150604084013590509250925092565b600080600080600060a0868803121561220d578081fd5b61221686612038565b945061222460208701612038565b9350604086013592506060860135915060808601356001600160401b0381111561224c578182fd5b6121ae888289016120d6565b60008060006060848603121561226c578283fd5b61227584612038565b95602085013595506040909401359392505050565b60006020828403121561229b578081fd5b81356001600160e01b0319811681146120f5578182fd5b600080604083850312156122c4578182fd5b82356001600160401b03808211156122da578384fd5b818501915085601f8301126122ed578384fd5b6122fc86833560208501611fe1565b9350602085013591508082168214612312578283fd5b50809150509250929050565b60006020828403121561232f578081fd5b5035919050565b600060208284031215612347578081fd5b5051919050565b600080600080600080600080610100898b03121561236a578283fd5b883597506020890135965061238160408a01612038565b979a96995096976060810135975060808101359660a0820135965060c0820135955060e0909101359350915050565b60008151808452815b818110156123d5576020818501810151868301820152016123b9565b818111156123e65782602083870101525b50601f01601f19169290920160200192915050565b805182526000602082015160c0602085015261241a60c08501826123b0565b6040848101516001600160401b031690860152606080850151908601526080808501519086015260a0938401516001600160a01b031693909401929092525090919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156124eb57603f198886030184526124d98583516123fb565b945092850192908501906001016124bd565b5092979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612581578151805185528681015187860152858101516001600160a01b031686860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e090810151908501526101009093019290850190600101612515565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612581578151805185528681015187860152858101516001600160a01b03168686015260609081015190850152608090930192908501906001016125ab565b60a08152600061260160a08301886123b0565b6001600160401b0396909616602083015250604081019390935260608301919091526001600160a01b0316608090910152919050565b6020815260006120f560208301846123fb565b604051601f8201601f191681016001600160401b038111828210171561267257612672612734565b604052919050565b6000821982111561268d5761268d61271e565b500190565b60008160001904831182151516156126ac576126ac61271e565b500290565b6000828210156126c3576126c361271e565b500390565b600181811c908216806126dc57607f821691505b602082108114156126fd57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156127175761271761271e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220094223e0b27142083c21c95fdf2f92e0745a1051985b363c4829bfb00b5adfde64736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
