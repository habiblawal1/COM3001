/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketTotal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketsSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "validateTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120e2806100206000396000f3fe6080604052600436106100a75760003560e01c8063bc197c8111610064578063bc197c811461019f578063c27a500d146101e4578063ca261ce1146101f9578063d88b24a914610219578063e3e5c2b914610247578063f23a6e611461025a57600080fd5b806301ffc9a7146100ac5780633548124b146100e15780636d1884e014610103578063806d1a37146101305780638a0e7a3c146101525780638aaf268614610172575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004611c73565b610286565b60405190151581526020015b60405180910390f35b3480156100ed57600080fd5b506100f6610297565b6040516100d89190611e6e565b34801561010f57600080fd5b5061012361011e366004611d07565b61050b565b6040516100d89190611f99565b34801561013c57600080fd5b5061015061014b366004611d37565b61066e565b005b34801561015e57600080fd5b5061015061016d366004611ba4565b6109ea565b34801561017e57600080fd5b5061019261018d366004611ae5565b610c10565b6040516100d89190611ecf565b3480156101ab57600080fd5b506101cb6101ba366004611aff565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100d8565b3480156101f057600080fd5b506100f6610ebc565b34801561020557600080fd5b50610192610214366004611d07565b611131565b34801561022557600080fd5b50610239610234366004611c9b565b6112eb565b6040519081526020016100d8565b610150610255366004611c41565b61147f565b34801561026657600080fd5b506101cb610275366004611bdf565b63f23a6e6160e01b95945050505050565b600061029182611875565b92915050565b606060006102a460015490565b905060008060005b838110156103075733600360006102c4846001611fdc565b81526020810191909152604001600020600501546001600160a01b031614156102f5576102f2600184611fdc565b92505b806102ff81612065565b9150506102ac565b506000826001600160401b0381111561033057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561036957816020015b6103566118aa565b81526020019060019003908161034e5790505b50905060005b84811015610502573360036000610387846001611fdc565b81526020810191909152604001600020600501546001600160a01b031614156104f05760006103b7826001611fdc565b90506000600360008381526020019081526020016000209050806040518060c0016040529081600082015481526020016001820180546103f69061202a565b80601f01602080910402602001604051908101604052809291908181526020018280546104229061202a565b801561046f5780601f106104445761010080835404028352916020019161046f565b820191906000526020600020905b81548152906001019060200180831161045257829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b031660809091015284518590879081106104d557634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104eb600186611fdc565b945050505b806104fa81612065565b91505061036f565b50949350505050565b6105136118aa565b6000828152600360205260409020546105735760405162461bcd60e51b815260206004820152601960248201527f54686973206576656e7420646f6573206e6f742065786973740000000000000060448201526064015b60405180910390fd5b600360008381526020019081526020016000206040518060c0016040529081600082015481526020016001820180546105ab9061202a565b80601f01602080910402602001604051908101604052809291908181526020018280546105d79061202a565b80156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b031660809091015292915050565b600081116106be5760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c6561737420312077656900000000604482015260640161056a565b604051627eeac760e11b81523360048201526024810186905282906001600160a01b0386169062fdd58e9060440160206040518083038186803b15801561070457600080fd5b505afa158015610718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073c9190611d1f565b10156107a75760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b606482015260840161056a565b6000868152600360205260409020600501546001600160a01b031633146108105760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e7400000000000000604482015260640161056a565b6000868152600360205260409020600201546001600160401b0390811642909116106108795760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161056a565b610887600080546001019055565b6040805160c08101825286815260208082018981523383850181815260608501878152608086018a815260a087018a815260008e8152600497889052899020975188559451600188015591516002870180546001600160a01b0319166001600160a01b039283161790559051600387015590518585015591516005909401939093559251637921219560e11b81529287169263f242432a9261093192909130918b91899101611e36565b600060405180830381600087803b15801561094b57600080fd5b505af115801561095f573d6000803e3d6000fd5b5050506000878152600360208190526040909120015461098191508390611fdc565b600087815260036020818152604092839020909101929092558051338152918201839052810184905260608101839052869086907f6bb5861eb6dc88b7c26ba9614d4c5a07978638a2fd2f71b64e8d1cb85f3311af9060800160405180910390a3505050505050565b600081815260046020908152604080832060010154835260039091529020600501546001600160a01b03163314610a945760405162461bcd60e51b815260206004820152604260248201527f596f7520646f206e6f7420746865206f776e20746865206576656e7420666f7260448201527f20746865207469636b657420747279696e6720746f2062652076616c69646174606482015261195960f21b608482015260a40161056a565b604051627eeac760e11b81526001600160a01b038381166004830152602482018390526000919085169062fdd58e9060440160206040518083038186803b158015610ade57600080fd5b505afa158015610af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b169190611d1f565b11610b635760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320646f6573206e6f74206f776e20746f6b656e000000000000604482015260640161056a565b60008181526005602090815260408083206001600160a01b038616845290915290205460ff1615610be05760405162461bcd60e51b815260206004820152602160248201527f557365722068617320616c72656164792076616c696461746564207469636b656044820152601d60fa1b606482015260840161056a565b60009081526005602090815260408083206001600160a01b03909416835292905220805460ff1916600117905550565b60606000610c1d60005490565b905060008060005b83811015610ce95760016001600160a01b03871662fdd58e33610c488585611fdc565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610c8c57600080fd5b505afa158015610ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc49190611d1f565b10610cd757610cd4600184611fdc565b92505b80610ce181612065565b915050610c25565b506000826001600160401b03811115610d1257634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610d4b57816020015b610d386118f2565b815260200190600190039081610d305790505b50905060005b84811015610eb25760016001600160a01b03881662fdd58e33610d748585611fdc565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b158015610db857600080fd5b505afa158015610dcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df09190611d1f565b10610ea0576000610e02826001611fdc565b600081815260046020818152604092839020835160c0810185528154815260018201549281019290925260028101546001600160a01b03169382019390935260038301546060820152908201546080820152600582015460a082015285519293509091859087908110610e8557634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610e9b600186611fdc565b945050505b80610eaa81612065565b915050610d51565b5095945050505050565b60606000610ec960015490565b905060008060005b83811015610f315760036000610ee8836001611fdc565b81526020810191909152604001600020600201546001600160401b03908116429091161015610f1f57610f1c600184611fdc565b92505b80610f2981612065565b915050610ed1565b506000826001600160401b03811115610f5a57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f9357816020015b610f806118aa565b815260200190600190039081610f785790505b50905060005b848110156105025760036000610fb0836001611fdc565b81526020810191909152604001600020600201546001600160401b0390811642909116101561111f576000610fe6826001611fdc565b90506000600360008381526020019081526020016000209050806040518060c0016040529081600082015481526020016001820180546110259061202a565b80601f01602080910402602001604051908101604052809291908181526020018280546110519061202a565b801561109e5780601f106110735761010080835404028352916020019161109e565b820191906000526020600020905b81548152906001019060200180831161108157829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b0316608090910152845185908790811061110457634e487b7160e01b600052603260045260246000fd5b602090810291909101015261111a600186611fdc565b945050505b8061112981612065565b915050610f99565b6060600061113e60005490565b905060008060005b8381101561119657856004600061115e846001611fdc565b815260200190815260200160002060010154141561118457611181600184611fdc565b92505b8061118e81612065565b915050611146565b506000826001600160401b038111156111bf57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156111f857816020015b6111e56118f2565b8152602001906001900390816111dd5790505b50905060005b84811015610eb2578660046000611216846001611fdc565b81526020019081526020016000206001015414156112d957600061123b826001611fdc565b600081815260046020818152604092839020835160c0810185528154815260018201549281019290925260028101546001600160a01b03169382019390935260038301546060820152908201546080820152600582015460a0820152855192935090918590879081106112be57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526112d4600186611fdc565b945050505b806112e381612065565b9150506111fe565b6000336112f757600080fd5b816001600160401b0316426001600160401b0316106113585760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c726561647920706173736564000000000000000000604482015260640161056a565b611366600180546001019055565b600061137160015490565b6040805160c08101825282815260208082018881526001600160401b03881683850152600060608401819052608084018190523360a08501528581526003835293909320825181559251805194955091936113d29260018501920190611931565b5060408281015160028301805467ffffffffffffffff19166001600160401b03909216919091179055606083015160038301556080830151600483015560a090920151600590910180546001600160a01b0319166001600160a01b039092169190911790555181907fe798e3d1c981dccaa805cf4220c73e55a59c9fa14d08e15cb196809ca6576abb90611470908790879060009081903390611f50565b60405180910390a29392505050565b60008281526004602081905260409182902060038101548183015460018301546002909301549451627eeac760e11b8152309481019490945260248401879052909390926001600160a01b039182169188169062fdd58e9060440160206040518083038186803b1580156114f257600080fd5b505afa158015611506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152a9190611d1f565b8511156115915760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b606482015260840161056a565b604051627eeac760e11b8152336004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b1580156115d557600080fd5b505afa1580156115e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160d9190611d1f565b6116179084612013565b8511156116a05760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a40161056a565b6116aa8585611ff4565b34146116f05760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b604482015260640161056a565b600086815260046020908152604080832060010154835260039091529020600201546001600160401b0390811642909116106117695760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161056a565b600086815260046020818152604080842060020180546001600160a01b03191690556005825280842033808652925292839020805460ff191690559151637921219560e11b81526001600160a01b038a169263f242432a926117d2923092918c918c9101611e36565b600060405180830381600087803b1580156117ec57600080fd5b505af1158015611800573d6000803e3d6000fd5b50505060008381526003602052604090206004015461182191508690611fdc565b6000838152600360205260408082206004019290925590516001600160a01b038316913480156108fc02929091818181858888f1935050505015801561186b573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b148061029157506301ffc9a760e01b6001600160e01b0319831614610291565b6040518060c00160405280600081526020016060815260200160006001600160401b03168152602001600081526020016000815260200160006001600160a01b031681525090565b6040518060c00160405280600081526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b82805461193d9061202a565b90600052602060002090601f01602090048101928261195f57600085556119a5565b82601f1061197857805160ff19168380011785556119a5565b828001600101855582156119a5579182015b828111156119a557825182559160200191906001019061198a565b506119b19291506119b5565b5090565b5b808211156119b157600081556001016119b6565b60006001600160401b038311156119e3576119e3612096565b6119f6601f8401601f1916602001611fac565b9050828152838383011115611a0a57600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611a3857600080fd5b919050565b600082601f830112611a4d578081fd5b813560206001600160401b03821115611a6857611a68612096565b8160051b611a77828201611fac565b838152828101908684018388018501891015611a91578687fd5b8693505b85841015611ab3578035835260019390930192918401918401611a95565b50979650505050505050565b600082601f830112611acf578081fd5b611ade838335602085016119ca565b9392505050565b600060208284031215611af6578081fd5b611ade82611a21565b600080600080600060a08688031215611b16578081fd5b611b1f86611a21565b9450611b2d60208701611a21565b935060408601356001600160401b0380821115611b48578283fd5b611b5489838a01611a3d565b94506060880135915080821115611b69578283fd5b611b7589838a01611a3d565b93506080880135915080821115611b8a578283fd5b50611b9788828901611abf565b9150509295509295909350565b600080600060608486031215611bb8578283fd5b611bc184611a21565b9250611bcf60208501611a21565b9150604084013590509250925092565b600080600080600060a08688031215611bf6578081fd5b611bff86611a21565b9450611c0d60208701611a21565b9350604086013592506060860135915060808601356001600160401b03811115611c35578182fd5b611b9788828901611abf565b600080600060608486031215611c55578283fd5b611c5e84611a21565b95602085013595506040909401359392505050565b600060208284031215611c84578081fd5b81356001600160e01b031981168114611ade578182fd5b60008060408385031215611cad578182fd5b82356001600160401b0380821115611cc3578384fd5b818501915085601f830112611cd6578384fd5b611ce5868335602085016119ca565b9350602085013591508082168214611cfb578283fd5b50809150509250929050565b600060208284031215611d18578081fd5b5035919050565b600060208284031215611d30578081fd5b5051919050565b60008060008060008060c08789031215611d4f578081fd5b8635955060208701359450611d6660408801611a21565b9350606087013592506080870135915060a087013590509295509295509295565b60008151808452815b81811015611dac57602081850181015186830182015201611d90565b81811115611dbd5782602083870101525b50601f01601f19169290920160200192915050565b805182526000602082015160c06020850152611df160c0850182611d87565b6040848101516001600160401b031690860152606080850151908601526080808501519086015260a0938401516001600160a01b031693909401929092525090919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015611ec257603f19888603018452611eb0858351611dd2565b94509285019290850190600101611e94565b5092979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015611f43578151805185528681015187860152858101516001600160a01b031686860152606080820151908601526080808201519086015260a0908101519085015260c09093019290850190600101611eec565b5091979650505050505050565b60a081526000611f6360a0830188611d87565b6001600160401b0396909616602083015250604081019390935260608301919091526001600160a01b0316608090910152919050565b602081526000611ade6020830184611dd2565b604051601f8201601f191681016001600160401b0381118282101715611fd457611fd4612096565b604052919050565b60008219821115611fef57611fef612080565b500190565b600081600019048311821515161561200e5761200e612080565b500290565b60008282101561202557612025612080565b500390565b600181811c9082168061203e57607f821691505b6020821081141561205f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561207957612079612080565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b1d62e7d32ce0b86cd4e3dc03b77b1a776ba49891e730d266ac5b4ebd34cca6364736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
