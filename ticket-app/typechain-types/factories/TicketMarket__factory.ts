/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d1d806100206000396000f3fe6080604052600436106100915760003560e01c8063ca261ce111610059578063ca261ce114610169578063d88b24a914610196578063e1d10d85146101c4578063e3e5c2b9146101d9578063f23a6e61146101ec57600080fd5b806301ffc9a7146100965780633548124b146100cb578063806d1a37146100ed578063bc197c811461010f578063c27a500d14610154575b600080fd5b3480156100a257600080fd5b506100b66100b13660046118db565b610218565b60405190151581526020015b60405180910390f35b3480156100d757600080fd5b506100e0610229565b6040516100c29190611a72565b3480156100f957600080fd5b5061010d61010836600461199f565b61049b565b005b34801561011b57600080fd5b5061013b61012a3660046117a2565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100c2565b34801561016057600080fd5b506100e0610897565b34801561017557600080fd5b5061018961018436600461196f565b610afc565b6040516100c29190611b0e565b3480156101a257600080fd5b506101b66101b1366004611903565b610d4b565b6040519081526020016100c2565b3480156101d057600080fd5b50610189610eab565b61010d6101e73660046118a9565b61109a565b3480156101f857600080fd5b5061013b610207366004611847565b63f23a6e6160e01b95945050505050565b600061022382611526565b92915050565b6060600061023660015490565b905060008060005b838110156102a0573360036000610256846001611c17565b8152602081019190915260400160002060020154600160401b90046001600160a01b0316141561028e5761028b600184611c17565b92505b8061029881611ca0565b91505061023e565b506000826001600160401b038111156102c957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561030257816020015b6102ef61155b565b8152602001906001900390816102e75790505b50905060005b84811015610492573360036000610320846001611c17565b8152602081019190915260400160002060020154600160401b90046001600160a01b03161415610480576000610357826001611c17565b90506000600360008381526020019081526020016000209050806040518060800160405290816000820154815260200160018201805461039690611c65565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290611c65565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050509183525050600291909101546001600160401b0381166020830152600160401b90046001600160a01b0316604090910152845185908790811061046557634e487b7160e01b600052603260045260246000fd5b602090810291909101015261047b600186611c17565b945050505b8061048a81611ca0565b915050610308565b50949350505050565b600081116104f05760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c656173742031207765690000000060448201526064015b60405180910390fd5b604051627eeac760e11b81523360048201526024810186905282906001600160a01b0386169062fdd58e9060440160206040518083038186803b15801561053657600080fd5b505afa15801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190611987565b10156105d95760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b60648201526084016104e7565b600086815260036020526040902060020154600160401b90046001600160a01b031633146106495760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e740000000000000060448201526064016104e7565b6000868152600360205260409020600201546001600160401b0390811642909116106106b25760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b60448201526064016104e7565b6106c0600080546001019055565b604051806101000160405280868152602001878152602001336001600160a01b0316815260200160006001600160a01b031681526020018281526020018481526020018381526020016000151581525060046000878152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff021916908315150217905550905050836001600160a01b031663f242432a333088866040518563ffffffff1660e01b81526004016108049493929190611a3a565b600060405180830381600087803b15801561081e57600080fd5b505af1158015610832573d6000803e3d6000fd5b505060408051338152600060208201819052818301869052606082018890526080820187905260a082015290518993508892507fa94586884db84c3aeaf8f46e595cf0235824e2d5cef9761c8624559c22c6626e9181900360c00190a3505050505050565b606060006108a460015490565b905060008060005b8381101561090c57600360006108c3836001611c17565b81526020810191909152604001600020600201546001600160401b039081164290911610156108fa576108f7600184611c17565b92505b8061090481611ca0565b9150506108ac565b506000826001600160401b0381111561093557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561096e57816020015b61095b61155b565b8152602001906001900390816109535790505b50905060005b84811015610492576003600061098b836001611c17565b81526020810191909152604001600020600201546001600160401b03908116429091161015610aea5760006109c1826001611c17565b905060006003600083815260200190815260200160002090508060405180608001604052908160008201548152602001600182018054610a0090611c65565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2c90611c65565b8015610a795780601f10610a4e57610100808354040283529160200191610a79565b820191906000526020600020905b815481529060010190602001808311610a5c57829003601f168201915b5050509183525050600291909101546001600160401b0381166020830152600160401b90046001600160a01b03166040909101528451859087908110610acf57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610ae5600186611c17565b945050505b80610af481611ca0565b915050610974565b60606000610b0960005490565b905060008060005b83811015610b97578560046000610b29846001611c17565b815260200190815260200160002060010154148015610b7257506000600481610b53846001611c17565b81526020810191909152604001600020600301546001600160a01b0316145b15610b8557610b82600184611c17565b92505b80610b8f81611ca0565b915050610b11565b506000826001600160401b03811115610bc057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610bf957816020015b610be6611595565b815260200190600190039081610bde5790505b50905060005b84811015610d41578660046000610c17846001611c17565b815260200190815260200160002060010154148015610c6057506000600481610c41846001611c17565b81526020810191909152604001600020600301546001600160a01b0316145b15610d2f576000610c72826001611c17565b6000818152600460208181526040928390208351610100810185528154815260018201549281019290925260028101546001600160a01b039081169483019490945260038101549093166060820152908201546080820152600582015460a0820152600682015460c0820152600782015460ff16151560e082015285519293509091859087908110610d1457634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610d2a600186611c17565b945050505b80610d3981611ca0565b915050610bff565b5095945050505050565b600033610d5757600080fd5b816001600160401b0316426001600160401b031610610db85760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c72656164792070617373656400000000000000000060448201526064016104e7565b610dc6600180546001019055565b6000610dd160015490565b6040805160808101825282815260208082018881526001600160401b038816838501523360608401526000858152600383529390932082518155925180519495509193610e2492600185019201906115ee565b50604082810151600290920180546060909401516001600160a01b0316600160401b026001600160e01b03199094166001600160401b03909316929092179290921790555181907f53ea3621695ba0dd1161b566c1cb3655d0df416964448b4b43bea64e5fb968f190610e9c90879087903390611bab565b60405180910390a29392505050565b60606000610eb860005490565b905060008060005b83811015610f1b573360046000610ed8846001611c17565b81526020810191909152604001600020600301546001600160a01b03161415610f0957610f06600184611c17565b92505b80610f1381611ca0565b915050610ec0565b506000826001600160401b03811115610f4457634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f7d57816020015b610f6a611595565b815260200190600190039081610f625790505b50905060005b84811015610492573360046000610f9b846001611c17565b81526020810191909152604001600020600301546001600160a01b03161415611088576000610fcb826001611c17565b6000818152600460208181526040928390208351610100810185528154815260018201549281019290925260028101546001600160a01b039081169483019490945260038101549093166060820152908201546080820152600582015460a0820152600682015460c0820152600782015460ff16151560e08201528551929350909185908790811061106d57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152611083600186611c17565b945050505b8061109281611ca0565b915050610f83565b6000828152600460208190526040918290208082015460058201546002909201549351627eeac760e11b81523093810193909352602483018690529290916001600160a01b03918216916001919088169062fdd58e9060440160206040518083038186803b15801561110b57600080fd5b505afa15801561111f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111439190611987565b10156111865760405162461bcd60e51b8152602060048201526012602482015271233937b69036bab9ba1031329037bbb732b960711b60448201526064016104e7565b604051627eeac760e11b8152306004820152602481018690526001600160a01b0387169062fdd58e9060440160206040518083038186803b1580156111ca57600080fd5b505afa1580156111de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112029190611987565b8411156112695760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b60648201526084016104e7565b604051627eeac760e11b8152336004820152602481018690526001600160a01b0387169062fdd58e9060440160206040518083038186803b1580156112ad57600080fd5b505afa1580156112c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e59190611987565b6112ef9083611c4e565b8411156113785760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a4016104e7565b6113828484611c2f565b34146113c85760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b60448201526064016104e7565b600085815260046020908152604080832060010154835260039091529020600201546001600160401b0390811642909116106114415760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b60448201526064016104e7565b600085815260046020819052604091829020600381018054336001600160a01b0319918216811790925560078301805460ff19166001179055600290920180549092169091559151637921219560e11b81526001600160a01b0389169263f242432a926114b5923092918b918b9101611a3a565b600060405180830381600087803b1580156114cf57600080fd5b505af11580156114e3573d6000803e3d6000fd5b50506040516001600160a01b03841692503480156108fc029250906000818181858888f1935050505015801561151d573d6000803e3d6000fd5b50505050505050565b60006001600160e01b03198216630271189760e51b148061022357506301ffc9a760e01b6001600160e01b0319831614610223565b6040518060800160405280600081526020016060815260200160006001600160401b0316815260200160006001600160a01b031681525090565b604051806101000160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b8280546115fa90611c65565b90600052602060002090601f01602090048101928261161c5760008555611662565b82601f1061163557805160ff1916838001178555611662565b82800160010185558215611662579182015b82811115611662578251825591602001919060010190611647565b5061166e929150611672565b5090565b5b8082111561166e5760008155600101611673565b60006001600160401b038311156116a0576116a0611cd1565b6116b3601f8401601f1916602001611be7565b90508281528383830111156116c757600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146116f557600080fd5b919050565b600082601f83011261170a578081fd5b813560206001600160401b0382111561172557611725611cd1565b8160051b611734828201611be7565b83815282810190868401838801850189101561174e578687fd5b8693505b85841015611770578035835260019390930192918401918401611752565b50979650505050505050565b600082601f83011261178c578081fd5b61179b83833560208501611687565b9392505050565b600080600080600060a086880312156117b9578081fd5b6117c2866116de565b94506117d0602087016116de565b935060408601356001600160401b03808211156117eb578283fd5b6117f789838a016116fa565b9450606088013591508082111561180c578283fd5b61181889838a016116fa565b9350608088013591508082111561182d578283fd5b5061183a8882890161177c565b9150509295509295909350565b600080600080600060a0868803121561185e578081fd5b611867866116de565b9450611875602087016116de565b9350604086013592506060860135915060808601356001600160401b0381111561189d578182fd5b61183a8882890161177c565b6000806000606084860312156118bd578283fd5b6118c6846116de565b95602085013595506040909401359392505050565b6000602082840312156118ec578081fd5b81356001600160e01b03198116811461179b578182fd5b60008060408385031215611915578182fd5b82356001600160401b038082111561192b578384fd5b818501915085601f83011261193e578384fd5b61194d86833560208501611687565b9350602085013591508082168214611963578283fd5b50809150509250929050565b600060208284031215611980578081fd5b5035919050565b600060208284031215611998578081fd5b5051919050565b60008060008060008060c087890312156119b7578081fd5b86359550602087013594506119ce604088016116de565b9350606087013592506080870135915060a087013590509295509295509295565b60008151808452815b81811015611a14576020818501810151868301820152016119f8565b81811115611a255782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015611b0057603f19898403018552815160808151855288820151818a870152611ac6828701826119ef565b838a01516001600160401b0316878b01526060938401516001600160a01b0316939096019290925250509386019390860190600101611a98565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015611b9e578151805185528681015187860152858101516001600160a01b0390811687870152606080830151909116908601526080808201519086015260a0808201519086015260c0808201519086015260e0908101511515908501526101009093019290850190600101611b2b565b5091979650505050505050565b606081526000611bbe60608301866119ef565b6001600160401b03949094166020830152506001600160a01b0391909116604090910152919050565b604051601f8201601f191681016001600160401b0381118282101715611c0f57611c0f611cd1565b604052919050565b60008219821115611c2a57611c2a611cbb565b500190565b6000816000190483118215151615611c4957611c49611cbb565b500290565b600082821015611c6057611c60611cbb565b500390565b600181811c90821680611c7957607f821691505b60208210811415611c9a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611cb457611cb4611cbb565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220378c24dcdbe769ba439b9a7e9f75261bb4ddd1b0b9a50144ab7fa19afa8ad44e64736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
