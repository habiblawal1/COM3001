/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "eventStartDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUri",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "eventStartDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "eventStartDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "eventStartDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612297806100206000396000f3fe6080604052600436106100915760003560e01c8063ca261ce111610059578063ca261ce114610175578063de3a538b146101a2578063e1d10d85146101c2578063e3e5c2b9146101d7578063f23a6e61146101ec57600080fd5b806301ffc9a7146100965780633548124b146100cb578063806d1a37146100ed578063bc197c811461011b578063c27a500d14610160575b600080fd5b3480156100a257600080fd5b506100b66100b1366004611d26565b610218565b60405190151581526020015b60405180910390f35b3480156100d757600080fd5b506100e0610229565b6040516100c29190611f19565b3480156100f957600080fd5b5061010d610108366004611e46565b610651565b6040519081526020016100c2565b34801561012757600080fd5b50610147610136366004611bed565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100c2565b34801561016c57600080fd5b506100e0610a03565b34801561018157600080fd5b50610195610190366004611e16565b610e1e565b6040516100c29190612010565b3480156101ae57600080fd5b5061010d6101bd366004611d55565b611078565b3480156101ce57600080fd5b50610195611274565b6101ea6101e5366004611cf4565b61146e565b005b3480156101f857600080fd5b50610147610207366004611c92565b63f23a6e6160e01b95945050505050565b6000610223826118fe565b92915050565b6060600061023660015490565b905060008060005b838110156102a0573360036000610256846001612191565b8152602081019190915260400160002060050154600160401b90046001600160a01b0316141561028e5761028b600184612191565b92505b806102988161221a565b91505061023e565b506000826001600160401b038111156102c957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561030257816020015b6102ef61199d565b8152602001906001900390816102e75790505b50905060005b84811015610648573360036000610320846001612191565b8152602081019190915260400160002060050154600160401b90046001600160a01b03161415610636576000610357826001612191565b90506000600360008381526020019081526020016000209050806040518060e001604052908160008201548152602001600182018054610396906121df565b80601f01602080910402602001604051908101604052809291908181526020018280546103c2906121df565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b50505050508152602001600282018054610428906121df565b80601f0160208091040260200160405190810160405280929190818152602001828054610454906121df565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b505050505081526020016003820180546104ba906121df565b80601f01602080910402602001604051908101604052809291908181526020018280546104e6906121df565b80156105335780601f1061050857610100808354040283529160200191610533565b820191906000526020600020905b81548152906001019060200180831161051657829003601f168201915b5050505050815260200160048201805461054c906121df565b80601f0160208091040260200160405190810160405280929190818152602001828054610578906121df565b80156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b5050509183525050600591909101546001600160401b0381166020830152600160401b90046001600160a01b0316604090910152845185908790811061061b57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610631600186612191565b945050505b806106408161221a565b915050610308565b50949350505050565b60008082116106a75760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c656173742031207765690000000060448201526064015b60405180910390fd5b604051627eeac760e11b81523360048201526024810187905283906001600160a01b0387169062fdd58e9060440160206040518083038186803b1580156106ed57600080fd5b505afa158015610701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190611e2e565b10156107905760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b606482015260840161069e565b600087815260036020526040902060050154600160401b90046001600160a01b031633146108005760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e7400000000000000604482015260640161069e565b6000878152600360205260409020600501546001600160401b0390811642909116106108695760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161069e565b610877600080546001019055565b60008054604080516101208101825289815260208082018481528284018d815233606085018181526080860189815260a087018c815260c088018f815260e089018f81526101008a018d81528c8e526004998a90529c8b902099518a55965160018a01559451600289015591516003880180546001600160a01b03199081166001600160a01b0393841617909155915188880180549093169082161790915590516005870155915160068601559151600785015595516008909301805460ff1916931515939093179092559151637921219560e11b8152929389169263f242432a9261096a929130918d918b9101611ee1565b600060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505060408051338152600060208201819052818301889052606082018a90526080820189905260a082015290518b93508492508a917f369ee61b7ab80588e88d714924baac765296fab2dfd6bed28e0addc82fefe2d2919081900360c00190a4979650505050505050565b60606000610a1060015490565b905060008060005b83811015610a785760036000610a2f836001612191565b81526020810191909152604001600020600501546001600160401b03908116429091161015610a6657610a63600184612191565b92505b80610a708161221a565b915050610a18565b506000826001600160401b03811115610aa157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610ada57816020015b610ac761199d565b815260200190600190039081610abf5790505b50905060005b848110156106485760036000610af7836001612191565b81526020810191909152604001600020600501546001600160401b03908116429091161015610e0c576000610b2d826001612191565b90506000600360008381526020019081526020016000209050806040518060e001604052908160008201548152602001600182018054610b6c906121df565b80601f0160208091040260200160405190810160405280929190818152602001828054610b98906121df565b8015610be55780601f10610bba57610100808354040283529160200191610be5565b820191906000526020600020905b815481529060010190602001808311610bc857829003601f168201915b50505050508152602001600282018054610bfe906121df565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2a906121df565b8015610c775780601f10610c4c57610100808354040283529160200191610c77565b820191906000526020600020905b815481529060010190602001808311610c5a57829003601f168201915b50505050508152602001600382018054610c90906121df565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbc906121df565b8015610d095780601f10610cde57610100808354040283529160200191610d09565b820191906000526020600020905b815481529060010190602001808311610cec57829003601f168201915b50505050508152602001600482018054610d22906121df565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4e906121df565b8015610d9b5780601f10610d7057610100808354040283529160200191610d9b565b820191906000526020600020905b815481529060010190602001808311610d7e57829003601f168201915b5050509183525050600591909101546001600160401b0381166020830152600160401b90046001600160a01b03166040909101528451859087908110610df157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610e07600186612191565b945050505b80610e168161221a565b915050610ae0565b60606000610e2b60005490565b905060008060005b83811015610eb9578560046000610e4b846001612191565b815260200190815260200160002060020154148015610e9457506000600481610e75846001612191565b81526020810191909152604001600020600401546001600160a01b0316145b15610ea757610ea4600184612191565b92505b80610eb18161221a565b915050610e33565b506000826001600160401b03811115610ee257634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f1b57816020015b610f086119ec565b815260200190600190039081610f005790505b50905060005b8481101561106e578660046000610f39846001612191565b815260200190815260200160002060020154148015610f8257506000600481610f63846001612191565b81526020810191909152604001600020600401546001600160a01b0316145b1561105c576000610f94826001612191565b6000818152600460208181526040928390208351610120810185528154815260018201549281019290925260028101549382019390935260038301546001600160a01b039081166060830152918301549091166080820152600582015460a0820152600682015460c0820152600782015460e0820152600882015460ff1615156101008201528551929350909185908790811061104157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152611057600186612191565b945050505b806110668161221a565b915050610f21565b5095945050505050565b60003361108457600080fd5b816001600160401b0316426001600160401b0316106110e55760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c726561647920706173736564000000000000000000604482015260640161069e565b61110e6040518060400160405280600781526020016602230ba32901e960cd1b81525042611933565b61111c600180546001019055565b600061112760015490565b6040805160e08101825282815260208082018b81528284018b9052606083018a9052608083018990526001600160401b03881660a08401523360c0840152600085815260038352939093208251815592518051949550919361118f9260018501920190611a4c565b50604082015180516111ab916002840191602090910190611a4c565b50606082015180516111c7916003840191602090910190611a4c565b50608082015180516111e3916004840191602090910190611a4c565b5060a08201516005909101805460c0909301516001600160a01b0316600160401b026001600160e01b03199093166001600160401b039092169190911791909117905560405181907ff7861de123da6b89c2d15999677111443491be21863452fefc7696c959ccfaad90611262908a908a908a908a908a9033906120c5565b60405180910390a29695505050505050565b6060600061128160005490565b905060008060005b838110156112e45733600460006112a1846001612191565b81526020810191909152604001600020600401546001600160a01b031614156112d2576112cf600184612191565b92505b806112dc8161221a565b915050611289565b506000826001600160401b0381111561130d57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561134657816020015b6113336119ec565b81526020019060019003908161132b5790505b50905060005b84811015610648573360046000611364846001612191565b81526020810191909152604001600020600401546001600160a01b0316141561145c576000611394826001612191565b6000818152600460208181526040928390208351610120810185528154815260018201549281019290925260028101549382019390935260038301546001600160a01b039081166060830152918301549091166080820152600582015460a0820152600682015460c0820152600782015460e0820152600882015460ff1615156101008201528551929350909185908790811061144157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152611457600186612191565b945050505b806114668161221a565b91505061134c565b6000828152600460208190526040918290206005810154815460068301546003909301549451627eeac760e11b8152309481019490945260248401879052909390926001600160a01b03918216916001919089169062fdd58e9060440160206040518083038186803b1580156114e357600080fd5b505afa1580156114f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151b9190611e2e565b101561155e5760405162461bcd60e51b8152602060048201526012602482015271233937b69036bab9ba1031329037bbb732b960711b604482015260640161069e565b604051627eeac760e11b8152306004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b1580156115a257600080fd5b505afa1580156115b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115da9190611e2e565b8511156116415760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b606482015260840161069e565b604051627eeac760e11b8152336004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b15801561168557600080fd5b505afa158015611699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bd9190611e2e565b6116c790836121c8565b8511156117505760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a40161069e565b61175a85856121a9565b34146117a05760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b604482015260640161069e565b600086815260046020908152604080832060020154835260039091529020600501546001600160401b0390811642909116106118195760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161069e565b6000868152600460208190526040918290208082018054336001600160a01b0319918216811790925560088301805460ff19166001179055600390920180549092169091559151637921219560e11b81526001600160a01b038a169263f242432a9261188c9230929189918c9101611ee1565b600060405180830381600087803b1580156118a657600080fd5b505af11580156118ba573d6000803e3d6000fd5b50506040516001600160a01b03841692503480156108fc029250906000818181858888f193505050501580156118f4573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b148061022357506301ffc9a760e01b6001600160e01b0319831614610223565b611978828260405160240161194992919061213f565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261197c565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040518060e00160405280600081526020016060815260200160608152602001606081526020016060815260200160006001600160401b0316815260200160006001600160a01b031681525090565b60405180610120016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b828054611a58906121df565b90600052602060002090601f016020900481019282611a7a5760008555611ac0565b82601f10611a9357805160ff1916838001178555611ac0565b82800160010185558215611ac0579182015b82811115611ac0578251825591602001919060010190611aa5565b50611acc929150611ad0565b5090565b5b80821115611acc5760008155600101611ad1565b80356001600160a01b0381168114611afc57600080fd5b919050565b600082601f830112611b11578081fd5b813560206001600160401b03821115611b2c57611b2c61224b565b8160051b611b3b828201612161565b838152828101908684018388018501891015611b55578687fd5b8693505b85841015611b77578035835260019390930192918401918401611b59565b50979650505050505050565b600082601f830112611b93578081fd5b81356001600160401b03811115611bac57611bac61224b565b611bbf601f8201601f1916602001612161565b818152846020838601011115611bd3578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215611c04578081fd5b611c0d86611ae5565b9450611c1b60208701611ae5565b935060408601356001600160401b0380821115611c36578283fd5b611c4289838a01611b01565b94506060880135915080821115611c57578283fd5b611c6389838a01611b01565b93506080880135915080821115611c78578283fd5b50611c8588828901611b83565b9150509295509295909350565b600080600080600060a08688031215611ca9578081fd5b611cb286611ae5565b9450611cc060208701611ae5565b9350604086013592506060860135915060808601356001600160401b03811115611ce8578182fd5b611c8588828901611b83565b600080600060608486031215611d08578283fd5b611d1184611ae5565b95602085013595506040909401359392505050565b600060208284031215611d37578081fd5b81356001600160e01b031981168114611d4e578182fd5b9392505050565b600080600080600060a08688031215611d6c578081fd5b85356001600160401b0380821115611d82578283fd5b611d8e89838a01611b83565b96506020880135915080821115611da3578283fd5b611daf89838a01611b83565b95506040880135915080821115611dc4578283fd5b611dd089838a01611b83565b94506060880135915080821115611de5578283fd5b611df189838a01611b83565b9350608088013591508082168214611e07578283fd5b50809150509295509295909350565b600060208284031215611e27578081fd5b5035919050565b600060208284031215611e3f578081fd5b5051919050565b60008060008060008060c08789031215611e5e578081fd5b8635955060208701359450611e7560408801611ae5565b9350606087013592506080870135915060a087013590509295509295509295565b60008151808452815b81811015611ebb57602081850181015186830182015201611e9f565b81811115611ecc5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561200257603f19898403018552815160e08151855288820151818a870152611f6d82870182611e96565b9150508782015185820389870152611f858282611e96565b91505060608083015186830382880152611f9f8382611e96565b9250505060808083015186830382880152611fba8382611e96565b9250505060a06001600160401b038184015116818701525060c0808301519250611fee818701846001600160a01b03169052565b509588019593505090860190600101611f3f565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b828110156120b857815180518552868101518786015285810151868601526060808201516001600160a01b031690860152608080820151612078828801826001600160a01b03169052565b505060a0818101519086015260c0808201519086015260e0808201519086015261010090810151151590850152610120909301929085019060010161202d565b5091979650505050505050565b60c0815260006120d860c0830189611e96565b82810360208401526120ea8189611e96565b905082810360408401526120fe8188611e96565b905082810360608401526121128187611e96565b6001600160401b0395909516608084015250506001600160a01b039190911660a090910152949350505050565b6040815260006121526040830185611e96565b90508260208301529392505050565b604051601f8201601f191681016001600160401b03811182821017156121895761218961224b565b604052919050565b600082198211156121a4576121a4612235565b500190565b60008160001904831182151516156121c3576121c3612235565b500290565b6000828210156121da576121da612235565b500390565b600181811c908216806121f357607f821691505b6020821081141561221457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561222e5761222e612235565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209c3d85f1d9cdcab23ca238d6c178336036e6a4149406ed9b73f17573cbaa0fdb64736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
