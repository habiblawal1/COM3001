/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ecb806100206000396000f3fe60806040526004361061009c5760003560e01c8063c27a500d11610064578063c27a500d1461018c578063ca261ce1146101a1578063d88b24a9146101ce578063e1d10d85146101fc578063e3e5c2b914610211578063f23a6e611461022457600080fd5b806301ffc9a7146100a15780633548124b146100d65780636d1884e0146100f8578063806d1a3714610125578063bc197c8114610147575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004611a61565b610250565b60405190151581526020015b60405180910390f35b3480156100e257600080fd5b506100eb610261565b6040516100cd9190611c48565b34801561010457600080fd5b50610118610113366004611af5565b6104d3565b6040516100cd9190611d82565b34801561013157600080fd5b50610145610140366004611b25565b610626565b005b34801561015357600080fd5b50610173610162366004611928565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100cd565b34801561019857600080fd5b506100eb610a1d565b3480156101ad57600080fd5b506101c16101bc366004611af5565b610c82565b6040516100cd9190611ca9565b3480156101da57600080fd5b506101ee6101e9366004611a89565b610ed1565b6040519081526020016100cd565b34801561020857600080fd5b506101c1611031565b61014561021f366004611a2f565b611220565b34801561023057600080fd5b5061017361023f3660046119cd565b63f23a6e6160e01b95945050505050565b600061025b826116ac565b92915050565b6060600061026e60015490565b905060008060005b838110156102d857336003600061028e846001611dc5565b8152602081019190915260400160002060020154600160401b90046001600160a01b031614156102c6576102c3600184611dc5565b92505b806102d081611e4e565b915050610276565b506000826001600160401b0381111561030157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561033a57816020015b6103276116e1565b81526020019060019003908161031f5790505b50905060005b848110156104ca573360036000610358846001611dc5565b8152602081019190915260400160002060020154600160401b90046001600160a01b031614156104b857600061038f826001611dc5565b9050600060036000838152602001908152602001600020905080604051806080016040529081600082015481526020016001820180546103ce90611e13565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa90611e13565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050509183525050600291909101546001600160401b0381166020830152600160401b90046001600160a01b0316604090910152845185908790811061049d57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104b3600186611dc5565b945050505b806104c281611e4e565b915050610340565b50949350505050565b6104db6116e1565b60008281526003602052604090205461053b5760405162461bcd60e51b815260206004820152601960248201527f54686973206576656e7420646f6573206e6f742065786973740000000000000060448201526064015b60405180910390fd5b600360008381526020019081526020016000206040518060800160405290816000820154815260200160018201805461057390611e13565b80601f016020809104026020016040519081016040528092919081815260200182805461059f90611e13565b80156105ec5780601f106105c1576101008083540402835291602001916105ec565b820191906000526020600020905b8154815290600101906020018083116105cf57829003601f168201915b5050509183525050600291909101546001600160401b0381166020830152600160401b90046001600160a01b031660409091015292915050565b600081116106765760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c65617374203120776569000000006044820152606401610532565b604051627eeac760e11b81523360048201526024810186905282906001600160a01b0386169062fdd58e9060440160206040518083038186803b1580156106bc57600080fd5b505afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f49190611b0d565b101561075f5760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b6064820152608401610532565b600086815260036020526040902060020154600160401b90046001600160a01b031633146107cf5760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e74000000000000006044820152606401610532565b6000868152600360205260409020600201546001600160401b0390811642909116106108385760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b6044820152606401610532565b610846600080546001019055565b604051806101000160405280868152602001878152602001336001600160a01b0316815260200160006001600160a01b031681526020018281526020018481526020018381526020016000151581525060046000878152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff021916908315150217905550905050836001600160a01b031663f242432a333088866040518563ffffffff1660e01b815260040161098a9493929190611c10565b600060405180830381600087803b1580156109a457600080fd5b505af11580156109b8573d6000803e3d6000fd5b505060408051338152600060208201819052818301869052606082018890526080820187905260a082015290518993508892507fa94586884db84c3aeaf8f46e595cf0235824e2d5cef9761c8624559c22c6626e9181900360c00190a3505050505050565b60606000610a2a60015490565b905060008060005b83811015610a925760036000610a49836001611dc5565b81526020810191909152604001600020600201546001600160401b03908116429091161015610a8057610a7d600184611dc5565b92505b80610a8a81611e4e565b915050610a32565b506000826001600160401b03811115610abb57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610af457816020015b610ae16116e1565b815260200190600190039081610ad95790505b50905060005b848110156104ca5760036000610b11836001611dc5565b81526020810191909152604001600020600201546001600160401b03908116429091161015610c70576000610b47826001611dc5565b905060006003600083815260200190815260200160002090508060405180608001604052908160008201548152602001600182018054610b8690611e13565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb290611e13565b8015610bff5780601f10610bd457610100808354040283529160200191610bff565b820191906000526020600020905b815481529060010190602001808311610be257829003601f168201915b5050509183525050600291909101546001600160401b0381166020830152600160401b90046001600160a01b03166040909101528451859087908110610c5557634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610c6b600186611dc5565b945050505b80610c7a81611e4e565b915050610afa565b60606000610c8f60005490565b905060008060005b83811015610d1d578560046000610caf846001611dc5565b815260200190815260200160002060010154148015610cf857506000600481610cd9846001611dc5565b81526020810191909152604001600020600301546001600160a01b0316145b15610d0b57610d08600184611dc5565b92505b80610d1581611e4e565b915050610c97565b506000826001600160401b03811115610d4657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610d7f57816020015b610d6c61171b565b815260200190600190039081610d645790505b50905060005b84811015610ec7578660046000610d9d846001611dc5565b815260200190815260200160002060010154148015610de657506000600481610dc7846001611dc5565b81526020810191909152604001600020600301546001600160a01b0316145b15610eb5576000610df8826001611dc5565b6000818152600460208181526040928390208351610100810185528154815260018201549281019290925260028101546001600160a01b039081169483019490945260038101549093166060820152908201546080820152600582015460a0820152600682015460c0820152600782015460ff16151560e082015285519293509091859087908110610e9a57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610eb0600186611dc5565b945050505b80610ebf81611e4e565b915050610d85565b5095945050505050565b600033610edd57600080fd5b816001600160401b0316426001600160401b031610610f3e5760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c7265616479207061737365640000000000000000006044820152606401610532565b610f4c600180546001019055565b6000610f5760015490565b6040805160808101825282815260208082018881526001600160401b038816838501523360608401526000858152600383529390932082518155925180519495509193610faa9260018501920190611774565b50604082810151600290920180546060909401516001600160a01b0316600160401b026001600160e01b03199094166001600160401b03909316929092179290921790555181907f53ea3621695ba0dd1161b566c1cb3655d0df416964448b4b43bea64e5fb968f19061102290879087903390611d46565b60405180910390a29392505050565b6060600061103e60005490565b905060008060005b838110156110a157336004600061105e846001611dc5565b81526020810191909152604001600020600301546001600160a01b0316141561108f5761108c600184611dc5565b92505b8061109981611e4e565b915050611046565b506000826001600160401b038111156110ca57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561110357816020015b6110f061171b565b8152602001906001900390816110e85790505b50905060005b848110156104ca573360046000611121846001611dc5565b81526020810191909152604001600020600301546001600160a01b0316141561120e576000611151826001611dc5565b6000818152600460208181526040928390208351610100810185528154815260018201549281019290925260028101546001600160a01b039081169483019490945260038101549093166060820152908201546080820152600582015460a0820152600682015460c0820152600782015460ff16151560e0820152855192935090918590879081106111f357634e487b7160e01b600052603260045260246000fd5b6020908102919091010152611209600186611dc5565b945050505b8061121881611e4e565b915050611109565b6000828152600460208190526040918290208082015460058201546002909201549351627eeac760e11b81523093810193909352602483018690529290916001600160a01b03918216916001919088169062fdd58e9060440160206040518083038186803b15801561129157600080fd5b505afa1580156112a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c99190611b0d565b101561130c5760405162461bcd60e51b8152602060048201526012602482015271233937b69036bab9ba1031329037bbb732b960711b6044820152606401610532565b604051627eeac760e11b8152306004820152602481018690526001600160a01b0387169062fdd58e9060440160206040518083038186803b15801561135057600080fd5b505afa158015611364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113889190611b0d565b8411156113ef5760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b6064820152608401610532565b604051627eeac760e11b8152336004820152602481018690526001600160a01b0387169062fdd58e9060440160206040518083038186803b15801561143357600080fd5b505afa158015611447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146b9190611b0d565b6114759083611dfc565b8411156114fe5760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a401610532565b6115088484611ddd565b341461154e5760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b6044820152606401610532565b600085815260046020908152604080832060010154835260039091529020600201546001600160401b0390811642909116106115c75760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b6044820152606401610532565b600085815260046020819052604091829020600381018054336001600160a01b0319918216811790925560078301805460ff19166001179055600290920180549092169091559151637921219560e11b81526001600160a01b0389169263f242432a9261163b923092918b918b9101611c10565b600060405180830381600087803b15801561165557600080fd5b505af1158015611669573d6000803e3d6000fd5b50506040516001600160a01b03841692503480156108fc029250906000818181858888f193505050501580156116a3573d6000803e3d6000fd5b50505050505050565b60006001600160e01b03198216630271189760e51b148061025b57506301ffc9a760e01b6001600160e01b031983161461025b565b6040518060800160405280600081526020016060815260200160006001600160401b0316815260200160006001600160a01b031681525090565b604051806101000160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b82805461178090611e13565b90600052602060002090601f0160209004810192826117a257600085556117e8565b82601f106117bb57805160ff19168380011785556117e8565b828001600101855582156117e8579182015b828111156117e85782518255916020019190600101906117cd565b506117f49291506117f8565b5090565b5b808211156117f457600081556001016117f9565b60006001600160401b0383111561182657611826611e7f565b611839601f8401601f1916602001611d95565b905082815283838301111561184d57600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461187b57600080fd5b919050565b600082601f830112611890578081fd5b813560206001600160401b038211156118ab576118ab611e7f565b8160051b6118ba828201611d95565b8381528281019086840183880185018910156118d4578687fd5b8693505b858410156118f65780358352600193909301929184019184016118d8565b50979650505050505050565b600082601f830112611912578081fd5b6119218383356020850161180d565b9392505050565b600080600080600060a0868803121561193f578081fd5b61194886611864565b945061195660208701611864565b935060408601356001600160401b0380821115611971578283fd5b61197d89838a01611880565b94506060880135915080821115611992578283fd5b61199e89838a01611880565b935060808801359150808211156119b3578283fd5b506119c088828901611902565b9150509295509295909350565b600080600080600060a086880312156119e4578081fd5b6119ed86611864565b94506119fb60208701611864565b9350604086013592506060860135915060808601356001600160401b03811115611a23578182fd5b6119c088828901611902565b600080600060608486031215611a43578283fd5b611a4c84611864565b95602085013595506040909401359392505050565b600060208284031215611a72578081fd5b81356001600160e01b031981168114611921578182fd5b60008060408385031215611a9b578182fd5b82356001600160401b0380821115611ab1578384fd5b818501915085601f830112611ac4578384fd5b611ad38683356020850161180d565b9350602085013591508082168214611ae9578283fd5b50809150509250929050565b600060208284031215611b06578081fd5b5035919050565b600060208284031215611b1e578081fd5b5051919050565b60008060008060008060c08789031215611b3d578081fd5b8635955060208701359450611b5460408801611864565b9350606087013592506080870135915060a087013590509295509295509295565b60008151808452815b81811015611b9a57602081850181015186830182015201611b7e565b81811115611bab5782602083870101525b50601f01601f19169290920160200192915050565b805182526000602082015160806020850152611bdf6080850182611b75565b6040848101516001600160401b0316908601526060938401516001600160a01b031693909401929092525090919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015611c9c57603f19888603018452611c8a858351611bc0565b94509285019290850190600101611c6e565b5092979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015611d39578151805185528681015187860152858101516001600160a01b0390811687870152606080830151909116908601526080808201519086015260a0808201519086015260c0808201519086015260e0908101511515908501526101009093019290850190600101611cc6565b5091979650505050505050565b606081526000611d596060830186611b75565b6001600160401b03949094166020830152506001600160a01b0391909116604090910152919050565b6020815260006119216020830184611bc0565b604051601f8201601f191681016001600160401b0381118282101715611dbd57611dbd611e7f565b604052919050565b60008219821115611dd857611dd8611e69565b500190565b6000816000190483118215151615611df757611df7611e69565b500290565b600082821015611e0e57611e0e611e69565b500390565b600181811c90821680611e2757607f821691505b60208210811415611e4857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611e6257611e62611e69565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122006d38fabba96598e23f09f50fa347fd317f918cf368cddea98044e79a2a0bd5764736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
