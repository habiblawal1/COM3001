/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "eventStartDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUri",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "eventStartDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "eventStartDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "eventStartDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061267f806100206000396000f3fe6080604052600436106100915760003560e01c8063ca261ce111610059578063ca261ce114610175578063de3a538b146101a2578063e1d10d85146101c2578063e3e5c2b9146101d7578063f23a6e61146101ec57600080fd5b806301ffc9a7146100965780633548124b146100cb578063806d1a37146100ed578063bc197c811461011b578063c27a500d14610160575b600080fd5b3480156100a257600080fd5b506100b66100b136600461209e565b610218565b60405190151581526020015b60405180910390f35b3480156100d757600080fd5b506100e0610229565b6040516100c29190612291565b3480156100f957600080fd5b5061010d6101083660046121be565b610651565b6040519081526020016100c2565b34801561012757600080fd5b50610147610136366004611f65565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100c2565b34801561016c57600080fd5b506100e0610b62565b34801561018157600080fd5b5061019561019036600461218e565b610f7d565b6040516100c29190612388565b3480156101ae57600080fd5b5061010d6101bd3660046120cd565b6111d7565b3480156101ce57600080fd5b506101956113aa565b6101ea6101e536600461206c565b6115a4565b005b3480156101f857600080fd5b5061014761020736600461200a565b63f23a6e6160e01b95945050505050565b600061022382611bef565b92915050565b6060600061023660015490565b905060008060005b838110156102a0573360036000610256846001612546565b8152602081019190915260400160002060050154600160401b90046001600160a01b0316141561028e5761028b600184612546565b92505b80610298816125cf565b91505061023e565b506000826001600160401b038111156102c957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561030257816020015b6102ef611d15565b8152602001906001900390816102e75790505b50905060005b84811015610648573360036000610320846001612546565b8152602081019190915260400160002060050154600160401b90046001600160a01b03161415610636576000610357826001612546565b90506000600360008381526020019081526020016000209050806040518060e00160405290816000820154815260200160018201805461039690612594565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290612594565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050815260200160028201805461042890612594565b80601f016020809104026020016040519081016040528092919081815260200182805461045490612594565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b505050505081526020016003820180546104ba90612594565b80601f01602080910402602001604051908101604052809291908181526020018280546104e690612594565b80156105335780601f1061050857610100808354040283529160200191610533565b820191906000526020600020905b81548152906001019060200180831161051657829003601f168201915b5050505050815260200160048201805461054c90612594565b80601f016020809104026020016040519081016040528092919081815260200182805461057890612594565b80156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b5050509183525050600591909101546001600160401b0381166020830152600160401b90046001600160a01b0316604090910152845185908790811061061b57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610631600186612546565b945050505b80610640816125cf565b915050610308565b50949350505050565b60008082116106a75760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c656173742031207765690000000060448201526064015b60405180910390fd5b604051627eeac760e11b81523360048201526024810187905283906001600160a01b0387169062fdd58e9060440160206040518083038186803b1580156106ed57600080fd5b505afa158015610701573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072591906121a6565b10156107905760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b606482015260840161069e565b600087815260036020526040902060050154600160401b90046001600160a01b031633146108005760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e7400000000000000604482015260640161069e565b6000878152600360205260409020600501546001600160401b0390811642909116106108695760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161069e565b610877600080546001019055565b60008054604080516101208101825289815260208082018481528284018d8152336060850190815260006080860181815260a087018c815260c088018f815260e089018f81526101008a018581528c86526004808b52958c90209a518b55975160018b0155955160028a015593516003890180546001600160a01b03199081166001600160a01b0393841617909155925193890180549093169316929092179055516005860155516006850155516007840155516008909201805460ff1916921515929092179091558151808301909252600a8252695468697320776f726b7360b01b9082015290915061096a90611c24565b610993604051806040016040528060078152602001660233937b6901e960cd1b81525033611c6a565b6109ba6040518060400160405280600581526020016402a37901e960dd1b81525030611c6a565b604080518082018252601281527102130b630b731b29037b310233937b6901e960751b60208201529051627eeac760e11b815233600482015260248101899052610a6891906001600160a01b0389169062fdd58e906044015b60206040518083038186803b158015610a2b57600080fd5b505afa158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6391906121a6565b611cb3565b610a976040518060400160405280600d81526020016c026a9a39029a2a72222a9101e9609d1b81525033611c6a565b604051637921219560e11b81526001600160a01b0387169063f242432a90610ac990339030908c908a90600401612259565b600060405180830381600087803b158015610ae357600080fd5b505af1158015610af7573d6000803e3d6000fd5b505060408051338152600060208201819052818301889052606082018a90526080820189905260a082015290518b93508492508a917f369ee61b7ab80588e88d714924baac765296fab2dfd6bed28e0addc82fefe2d2919081900360c00190a4979650505050505050565b60606000610b6f60015490565b905060008060005b83811015610bd75760036000610b8e836001612546565b81526020810191909152604001600020600501546001600160401b03908116429091161015610bc557610bc2600184612546565b92505b80610bcf816125cf565b915050610b77565b506000826001600160401b03811115610c0057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610c3957816020015b610c26611d15565b815260200190600190039081610c1e5790505b50905060005b848110156106485760036000610c56836001612546565b81526020810191909152604001600020600501546001600160401b03908116429091161015610f6b576000610c8c826001612546565b90506000600360008381526020019081526020016000209050806040518060e001604052908160008201548152602001600182018054610ccb90612594565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf790612594565b8015610d445780601f10610d1957610100808354040283529160200191610d44565b820191906000526020600020905b815481529060010190602001808311610d2757829003601f168201915b50505050508152602001600282018054610d5d90612594565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8990612594565b8015610dd65780601f10610dab57610100808354040283529160200191610dd6565b820191906000526020600020905b815481529060010190602001808311610db957829003601f168201915b50505050508152602001600382018054610def90612594565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1b90612594565b8015610e685780601f10610e3d57610100808354040283529160200191610e68565b820191906000526020600020905b815481529060010190602001808311610e4b57829003601f168201915b50505050508152602001600482018054610e8190612594565b80601f0160208091040260200160405190810160405280929190818152602001828054610ead90612594565b8015610efa5780601f10610ecf57610100808354040283529160200191610efa565b820191906000526020600020905b815481529060010190602001808311610edd57829003601f168201915b5050509183525050600591909101546001600160401b0381166020830152600160401b90046001600160a01b03166040909101528451859087908110610f5057634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610f66600186612546565b945050505b80610f75816125cf565b915050610c3f565b60606000610f8a60005490565b905060008060005b83811015611018578560046000610faa846001612546565b815260200190815260200160002060020154148015610ff357506000600481610fd4846001612546565b81526020810191909152604001600020600401546001600160a01b0316145b1561100657611003600184612546565b92505b80611010816125cf565b915050610f92565b506000826001600160401b0381111561104157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561107a57816020015b611067611d64565b81526020019060019003908161105f5790505b50905060005b848110156111cd578660046000611098846001612546565b8152602001908152602001600020600201541480156110e1575060006004816110c2846001612546565b81526020810191909152604001600020600401546001600160a01b0316145b156111bb5760006110f3826001612546565b6000818152600460208181526040928390208351610120810185528154815260018201549281019290925260028101549382019390935260038301546001600160a01b039081166060830152918301549091166080820152600582015460a0820152600682015460c0820152600782015460e0820152600882015460ff161515610100820152855192935090918590879081106111a057634e487b7160e01b600052603260045260246000fd5b60209081029190910101526111b6600186612546565b945050505b806111c5816125cf565b915050611080565b5095945050505050565b6000336111e357600080fd5b816001600160401b0316426001600160401b0316106112445760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c726561647920706173736564000000000000000000604482015260640161069e565b611252600180546001019055565b600061125d60015490565b6040805160e08101825282815260208082018b81528284018b9052606083018a9052608083018990526001600160401b03881660a08401523360c084015260008581526003835293909320825181559251805194955091936112c59260018501920190611dc4565b50604082015180516112e1916002840191602090910190611dc4565b50606082015180516112fd916003840191602090910190611dc4565b5060808201518051611319916004840191602090910190611dc4565b5060a08201516005909101805460c0909301516001600160a01b0316600160401b026001600160e01b03199093166001600160401b039092169190911791909117905560405181907ff7861de123da6b89c2d15999677111443491be21863452fefc7696c959ccfaad90611398908a908a908a908a908a90339061247a565b60405180910390a29695505050505050565b606060006113b760005490565b905060008060005b8381101561141a5733600460006113d7846001612546565b81526020810191909152604001600020600401546001600160a01b0316141561140857611405600184612546565b92505b80611412816125cf565b9150506113bf565b506000826001600160401b0381111561144357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561147c57816020015b611469611d64565b8152602001906001900390816114615790505b50905060005b8481101561064857336004600061149a846001612546565b81526020810191909152604001600020600401546001600160a01b031614156115925760006114ca826001612546565b6000818152600460208181526040928390208351610120810185528154815260018201549281019290925260028101549382019390935260038301546001600160a01b039081166060830152918301549091166080820152600582015460a0820152600682015460c0820152600782015460e0820152600882015460ff1615156101008201528551929350909185908790811061157757634e487b7160e01b600052603260045260246000fd5b602090810291909101015261158d600186612546565b945050505b8061159c816125cf565b915050611482565b6115f160405180606001604052806033815260200161261760339139604051627eeac760e11b8152306004820152602481018590526001600160a01b0386169062fdd58e90604401610a13565b61161f6040518060400160405280600c81526020016b02a34b1b5b2ba1024a2101e960a51b81525083611cb3565b61165260405180604001604052806011815260200170026b0b935b2ba1030b2323932b9b9901e9607d1b81525030611c6a565b6000828152600460208190526040918290206005810154815460068301546003909301549451627eeac760e11b8152309481019490945260248401879052909390926001600160a01b03918216916001919089169062fdd58e9060440160206040518083038186803b1580156116c757600080fd5b505afa1580156116db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ff91906121a6565b10156117425760405162461bcd60e51b8152602060048201526012602482015271233937b69036bab9ba1031329037bbb732b960711b604482015260640161069e565b604051627eeac760e11b8152306004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b15801561178657600080fd5b505afa15801561179a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117be91906121a6565b8511156118255760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b606482015260840161069e565b604051627eeac760e11b8152336004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b15801561186957600080fd5b505afa15801561187d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a191906121a6565b6118ab908361257d565b8511156119345760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a40161069e565b61193e858561255e565b34146119845760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b604482015260640161069e565b600086815260046020908152604080832060020154835260039091529020600501546001600160401b0390811642909116106119fd5760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b604482015260640161069e565b60008681526004602081815260409283902091820180546001600160a01b0319908116331790915560088301805460ff1916600117905560039092018054909216909155815180830190925260118252705468697320444f45534e275420776f726b60781b90820152611a6f90611c24565b611a98604051806040016040528060078152602001660233937b6901e960cd1b81525030611c6a565b611abf6040518060400160405280600581526020016402a37901e960dd1b81525033611c6a565b604080518082018252601281527102130b630b731b29037b310233937b6901e960751b60208201529051627eeac760e11b815230600482015260248101889052611b1c91906001600160a01b038a169062fdd58e90604401610a13565b611b4b6040518060400160405280600d81526020016c026a9a39029a2a72222a9101e9609d1b81525033611c6a565b604051637921219560e11b81526001600160a01b0388169063f242432a90611b7d903090339088908b90600401612259565b600060405180830381600087803b158015611b9757600080fd5b505af1158015611bab573d6000803e3d6000fd5b50506040516001600160a01b03841692503480156108fc029250906000818181858888f19350505050158015611be5573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b148061022357506301ffc9a760e01b6001600160e01b0319831614610223565b611c6781604051602401611c38919061243d565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611cf4565b50565b611caf8282604051602401611c80929190612450565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052611cf4565b5050565b611caf8282604051602401611cc99291906124f4565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040518060e00160405280600081526020016060815260200160608152602001606081526020016060815260200160006001600160401b0316815260200160006001600160a01b031681525090565b60405180610120016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b828054611dd090612594565b90600052602060002090601f016020900481019282611df25760008555611e38565b82601f10611e0b57805160ff1916838001178555611e38565b82800160010185558215611e38579182015b82811115611e38578251825591602001919060010190611e1d565b50611e44929150611e48565b5090565b5b80821115611e445760008155600101611e49565b80356001600160a01b0381168114611e7457600080fd5b919050565b600082601f830112611e89578081fd5b813560206001600160401b03821115611ea457611ea4612600565b8160051b611eb3828201612516565b838152828101908684018388018501891015611ecd578687fd5b8693505b85841015611eef578035835260019390930192918401918401611ed1565b50979650505050505050565b600082601f830112611f0b578081fd5b81356001600160401b03811115611f2457611f24612600565b611f37601f8201601f1916602001612516565b818152846020838601011115611f4b578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215611f7c578081fd5b611f8586611e5d565b9450611f9360208701611e5d565b935060408601356001600160401b0380821115611fae578283fd5b611fba89838a01611e79565b94506060880135915080821115611fcf578283fd5b611fdb89838a01611e79565b93506080880135915080821115611ff0578283fd5b50611ffd88828901611efb565b9150509295509295909350565b600080600080600060a08688031215612021578081fd5b61202a86611e5d565b945061203860208701611e5d565b9350604086013592506060860135915060808601356001600160401b03811115612060578182fd5b611ffd88828901611efb565b600080600060608486031215612080578283fd5b61208984611e5d565b95602085013595506040909401359392505050565b6000602082840312156120af578081fd5b81356001600160e01b0319811681146120c6578182fd5b9392505050565b600080600080600060a086880312156120e4578081fd5b85356001600160401b03808211156120fa578283fd5b61210689838a01611efb565b9650602088013591508082111561211b578283fd5b61212789838a01611efb565b9550604088013591508082111561213c578283fd5b61214889838a01611efb565b9450606088013591508082111561215d578283fd5b61216989838a01611efb565b935060808801359150808216821461217f578283fd5b50809150509295509295909350565b60006020828403121561219f578081fd5b5035919050565b6000602082840312156121b7578081fd5b5051919050565b60008060008060008060c087890312156121d6578081fd5b86359550602087013594506121ed60408801611e5d565b9350606087013592506080870135915060a087013590509295509295509295565b60008151808452815b8181101561223357602081850181015186830182015201612217565b818111156122445782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b60006020808301818452808551808352604092508286019150828160051b870101848801865b8381101561237a57603f19898403018552815160e08151855288820151818a8701526122e58287018261220e565b91505087820151858203898701526122fd828261220e565b91505060608083015186830382880152612317838261220e565b9250505060808083015186830382880152612332838261220e565b9250505060a06001600160401b038184015116818701525060c0808301519250612366818701846001600160a01b03169052565b5095880195935050908601906001016122b7565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561243057815180518552868101518786015285810151868601526060808201516001600160a01b0316908601526080808201516123f0828801826001600160a01b03169052565b505060a0818101519086015260c0808201519086015260e080820151908601526101009081015115159085015261012090930192908501906001016123a5565b5091979650505050505050565b6020815260006120c6602083018461220e565b604081526000612463604083018561220e565b905060018060a01b03831660208301529392505050565b60c08152600061248d60c083018961220e565b828103602084015261249f818961220e565b905082810360408401526124b3818861220e565b905082810360608401526124c7818761220e565b6001600160401b0395909516608084015250506001600160a01b039190911660a090910152949350505050565b604081526000612507604083018561220e565b90508260208301529392505050565b604051601f8201601f191681016001600160401b038111828210171561253e5761253e612600565b604052919050565b60008219821115612559576125596125ea565b500190565b6000816000190483118215151615612578576125786125ea565b500290565b60008282101561258f5761258f6125ea565b500390565b600181811c908216806125a857607f821691505b602082108114156125c957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156125e3576125e36125ea565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfe42616c616e6365206f66204d61726b6574206166746572207768656e207469636b6574206973206265696e6720626f75676874a2646970667358221220b83b563bdbfe43761e28c158c3b889526504d358add1d3c5835218395af27fa664736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
