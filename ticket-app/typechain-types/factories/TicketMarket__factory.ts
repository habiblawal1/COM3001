/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d0d806100206000396000f3fe6080604052600436106100915760003560e01c8063ca261ce111610059578063ca261ce114610175578063d88b24a9146101a2578063e1d10d85146101c2578063e3e5c2b9146101d7578063f23a6e61146101ec57600080fd5b806301ffc9a7146100965780633548124b146100cb578063806d1a37146100ed578063bc197c811461011b578063c27a500d14610160575b600080fd5b3480156100a257600080fd5b506100b66100b13660046118b3565b610218565b60405190151581526020015b60405180910390f35b3480156100d757600080fd5b506100e0610229565b6040516100c29190611a4a565b3480156100f957600080fd5b5061010d610108366004611977565b61049b565b6040519081526020016100c2565b34801561012757600080fd5b5061014761013636600461177a565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016100c2565b34801561016c57600080fd5b506100e061084d565b34801561018157600080fd5b50610195610190366004611947565b610ab2565b6040516100c29190611ae6565b3480156101ae57600080fd5b5061010d6101bd3660046118db565b610d0c565b3480156101ce57600080fd5b50610195610e6c565b6101ea6101e5366004611881565b611066565b005b3480156101f857600080fd5b5061014761020736600461181f565b63f23a6e6160e01b95945050505050565b6000610223826114f7565b92915050565b6060600061023660015490565b905060008060005b838110156102a0573360036000610256846001611c07565b8152602081019190915260400160002060020154600160401b90046001600160a01b0316141561028e5761028b600184611c07565b92505b8061029881611c90565b91505061023e565b506000826001600160401b038111156102c957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561030257816020015b6102ef61152c565b8152602001906001900390816102e75790505b50905060005b84811015610492573360036000610320846001611c07565b8152602081019190915260400160002060020154600160401b90046001600160a01b03161415610480576000610357826001611c07565b90506000600360008381526020019081526020016000209050806040518060800160405290816000820154815260200160018201805461039690611c55565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290611c55565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050509183525050600291909101546001600160401b0381166020830152600160401b90046001600160a01b0316604090910152845185908790811061046557634e487b7160e01b600052603260045260246000fd5b602090810291909101015261047b600186611c07565b945050505b8061048a81611c90565b915050610308565b50949350505050565b60008082116104f15760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c656173742031207765690000000060448201526064015b60405180910390fd5b604051627eeac760e11b81523360048201526024810187905283906001600160a01b0387169062fdd58e9060440160206040518083038186803b15801561053757600080fd5b505afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f919061195f565b10156105da5760405162461bcd60e51b815260206004820152603460248201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6044820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b60648201526084016104e8565b600087815260036020526040902060020154600160401b90046001600160a01b0316331461064a5760405162461bcd60e51b815260206004820152601960248201527f596f7520646f206e6f74206f776e2074686973206576656e740000000000000060448201526064016104e8565b6000878152600360205260409020600201546001600160401b0390811642909116106106b35760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b60448201526064016104e8565b6106c1600080546001019055565b60008054604080516101208101825289815260208082018481528284018d815233606085018181526080860189815260a087018c815260c088018f815260e089018f81526101008a018d81528c8e526004998a90529c8b902099518a55965160018a01559451600289015591516003880180546001600160a01b03199081166001600160a01b0393841617909155915188880180549093169082161790915590516005870155915160068601559151600785015595516008909301805460ff1916931515939093179092559151637921219560e11b8152929389169263f242432a926107b4929130918d918b9101611a12565b600060405180830381600087803b1580156107ce57600080fd5b505af11580156107e2573d6000803e3d6000fd5b505060408051338152600060208201819052818301889052606082018a90526080820189905260a082015290518b93508492508a917f369ee61b7ab80588e88d714924baac765296fab2dfd6bed28e0addc82fefe2d2919081900360c00190a4979650505050505050565b6060600061085a60015490565b905060008060005b838110156108c25760036000610879836001611c07565b81526020810191909152604001600020600201546001600160401b039081164290911610156108b0576108ad600184611c07565b92505b806108ba81611c90565b915050610862565b506000826001600160401b038111156108eb57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561092457816020015b61091161152c565b8152602001906001900390816109095790505b50905060005b848110156104925760036000610941836001611c07565b81526020810191909152604001600020600201546001600160401b03908116429091161015610aa0576000610977826001611c07565b9050600060036000838152602001908152602001600020905080604051806080016040529081600082015481526020016001820180546109b690611c55565b80601f01602080910402602001604051908101604052809291908181526020018280546109e290611c55565b8015610a2f5780601f10610a0457610100808354040283529160200191610a2f565b820191906000526020600020905b815481529060010190602001808311610a1257829003601f168201915b5050509183525050600291909101546001600160401b0381166020830152600160401b90046001600160a01b03166040909101528451859087908110610a8557634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610a9b600186611c07565b945050505b80610aaa81611c90565b91505061092a565b60606000610abf60005490565b905060008060005b83811015610b4d578560046000610adf846001611c07565b815260200190815260200160002060020154148015610b2857506000600481610b09846001611c07565b81526020810191909152604001600020600401546001600160a01b0316145b15610b3b57610b38600184611c07565b92505b80610b4581611c90565b915050610ac7565b506000826001600160401b03811115610b7657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610baf57816020015b610b9c611566565b815260200190600190039081610b945790505b50905060005b84811015610d02578660046000610bcd846001611c07565b815260200190815260200160002060020154148015610c1657506000600481610bf7846001611c07565b81526020810191909152604001600020600401546001600160a01b0316145b15610cf0576000610c28826001611c07565b6000818152600460208181526040928390208351610120810185528154815260018201549281019290925260028101549382019390935260038301546001600160a01b039081166060830152918301549091166080820152600582015460a0820152600682015460c0820152600782015460e0820152600882015460ff16151561010082015285519293509091859087908110610cd557634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610ceb600186611c07565b945050505b80610cfa81611c90565b915050610bb5565b5095945050505050565b600033610d1857600080fd5b816001600160401b0316426001600160401b031610610d795760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c72656164792070617373656400000000000000000060448201526064016104e8565b610d87600180546001019055565b6000610d9260015490565b6040805160808101825282815260208082018881526001600160401b038816838501523360608401526000858152600383529390932082518155925180519495509193610de592600185019201906115c6565b50604082810151600290920180546060909401516001600160a01b0316600160401b026001600160e01b03199094166001600160401b03909316929092179290921790555181907f53ea3621695ba0dd1161b566c1cb3655d0df416964448b4b43bea64e5fb968f190610e5d90879087903390611b9b565b60405180910390a29392505050565b60606000610e7960005490565b905060008060005b83811015610edc573360046000610e99846001611c07565b81526020810191909152604001600020600401546001600160a01b03161415610eca57610ec7600184611c07565b92505b80610ed481611c90565b915050610e81565b506000826001600160401b03811115610f0557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f3e57816020015b610f2b611566565b815260200190600190039081610f235790505b50905060005b84811015610492573360046000610f5c846001611c07565b81526020810191909152604001600020600401546001600160a01b03161415611054576000610f8c826001611c07565b6000818152600460208181526040928390208351610120810185528154815260018201549281019290925260028101549382019390935260038301546001600160a01b039081166060830152918301549091166080820152600582015460a0820152600682015460c0820152600782015460e0820152600882015460ff1615156101008201528551929350909185908790811061103957634e487b7160e01b600052603260045260246000fd5b602090810291909101015261104f600186611c07565b945050505b8061105e81611c90565b915050610f44565b6000828152600460208190526040918290206005810154815460068301546003909301549451627eeac760e11b8152309481019490945260248401879052909390926001600160a01b03918216916001919089169062fdd58e9060440160206040518083038186803b1580156110db57600080fd5b505afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611113919061195f565b10156111565760405162461bcd60e51b8152602060048201526012602482015271233937b69036bab9ba1031329037bbb732b960711b60448201526064016104e8565b604051627eeac760e11b8152306004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b15801561119a57600080fd5b505afa1580156111ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d2919061195f565b8511156112395760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b60648201526084016104e8565b604051627eeac760e11b8152336004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b15801561127d57600080fd5b505afa158015611291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b5919061195f565b6112bf9083611c3e565b8511156113485760405162461bcd60e51b815260206004820152604b60248201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60448201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060648201526a746f20707572636861736560a81b608482015260a4016104e8565b6113528585611c1f565b34146113985760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da081b5bdb995e481cd95b9d605a1b60448201526064016104e8565b60008681526004602090815260408083206002908101548452600390925290912001546001600160401b0390811642909116106114125760405162461bcd60e51b8152602060048201526018602482015277115d995b9d081a185cc8185b1c9958591e481c185cdcd95960421b60448201526064016104e8565b6000868152600460208190526040918290208082018054336001600160a01b0319918216811790925560088301805460ff19166001179055600390920180549092169091559151637921219560e11b81526001600160a01b038a169263f242432a926114859230929189918c9101611a12565b600060405180830381600087803b15801561149f57600080fd5b505af11580156114b3573d6000803e3d6000fd5b50506040516001600160a01b03841692503480156108fc029250906000818181858888f193505050501580156114ed573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b148061022357506301ffc9a760e01b6001600160e01b0319831614610223565b6040518060800160405280600081526020016060815260200160006001600160401b0316815260200160006001600160a01b031681525090565b60405180610120016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581525090565b8280546115d290611c55565b90600052602060002090601f0160209004810192826115f4576000855561163a565b82601f1061160d57805160ff191683800117855561163a565b8280016001018555821561163a579182015b8281111561163a57825182559160200191906001019061161f565b5061164692915061164a565b5090565b5b80821115611646576000815560010161164b565b60006001600160401b0383111561167857611678611cc1565b61168b601f8401601f1916602001611bd7565b905082815283838301111561169f57600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146116cd57600080fd5b919050565b600082601f8301126116e2578081fd5b813560206001600160401b038211156116fd576116fd611cc1565b8160051b61170c828201611bd7565b838152828101908684018388018501891015611726578687fd5b8693505b8584101561174857803583526001939093019291840191840161172a565b50979650505050505050565b600082601f830112611764578081fd5b6117738383356020850161165f565b9392505050565b600080600080600060a08688031215611791578081fd5b61179a866116b6565b94506117a8602087016116b6565b935060408601356001600160401b03808211156117c3578283fd5b6117cf89838a016116d2565b945060608801359150808211156117e4578283fd5b6117f089838a016116d2565b93506080880135915080821115611805578283fd5b5061181288828901611754565b9150509295509295909350565b600080600080600060a08688031215611836578081fd5b61183f866116b6565b945061184d602087016116b6565b9350604086013592506060860135915060808601356001600160401b03811115611875578182fd5b61181288828901611754565b600080600060608486031215611895578283fd5b61189e846116b6565b95602085013595506040909401359392505050565b6000602082840312156118c4578081fd5b81356001600160e01b031981168114611773578182fd5b600080604083850312156118ed578182fd5b82356001600160401b0380821115611903578384fd5b818501915085601f830112611916578384fd5b6119258683356020850161165f565b935060208501359150808216821461193b578283fd5b50809150509250929050565b600060208284031215611958578081fd5b5035919050565b600060208284031215611970578081fd5b5051919050565b60008060008060008060c0878903121561198f578081fd5b86359550602087013594506119a6604088016116b6565b9350606087013592506080870135915060a087013590509295509295509295565b60008151808452815b818110156119ec576020818501810151868301820152016119d0565b818111156119fd5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015611ad857603f19898403018552815160808151855288820151818a870152611a9e828701826119c7565b838a01516001600160401b0316878b01526060938401516001600160a01b0316939096019290925250509386019390860190600101611a70565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015611b8e57815180518552868101518786015285810151868601526060808201516001600160a01b031690860152608080820151611b4e828801826001600160a01b03169052565b505060a0818101519086015260c0808201519086015260e08082015190860152610100908101511515908501526101209093019290850190600101611b03565b5091979650505050505050565b606081526000611bae60608301866119c7565b6001600160401b03949094166020830152506001600160a01b0391909116604090910152919050565b604051601f8201601f191681016001600160401b0381118282101715611bff57611bff611cc1565b604052919050565b60008219821115611c1a57611c1a611cab565b500190565b6000816000190483118215151615611c3957611c39611cab565b500290565b600082821015611c5057611c50611cab565b500390565b600181811c90821680611c6957607f821691505b60208210811415611c8a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611ca457611ca4611cab565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d61f6a1b16df4db02eda8cdc475e28e70a587cfa9d95e5d0a16115dffe2cc93064736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
