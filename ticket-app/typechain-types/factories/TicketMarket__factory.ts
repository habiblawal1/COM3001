/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TicketMarket, TicketMarketInterface } from "../TicketMarket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketTotal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketsSold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "royaltyFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxResalePrice",
        type: "uint256",
      },
    ],
    name: "MarketTicketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "resaleId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "resalePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "ResaleTicketCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addMoreTicketsToMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_resaleId",
        type: "uint256",
      },
    ],
    name: "buyResaleTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "startDate",
        type: "uint64",
      },
    ],
    name: "createEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "purchaseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royaltyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxResalePrice",
        type: "uint256",
      },
    ],
    name: "createMarketTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royaltyFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxResalePrice",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "startDate",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "ticketTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketsSold",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TicketMarket.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyResaleListings",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "resaleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "resalePrice",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.ResaleTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "getMyTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "royaltyFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxResalePrice",
            type: "uint256",
          },
        ],
        internalType: "struct TicketMarket.MarketTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getResaleTickets",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "resaleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "resalePrice",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct TicketMarket.ResaleTicket[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listOnResale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "validateTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506132da806100206000396000f3fe6080604052600436106100fe5760003560e01c8063aa1a3e6d11610095578063ca261ce111610064578063ca261ce1146102d3578063d686c530146102f3578063d88b24a914610313578063e3e5c2b914610333578063f23a6e611461034657600080fd5b8063aa1a3e6d14610246578063b4ec509e14610266578063bc197c8114610279578063c27a500d146102be57600080fd5b8063772dd824116100d1578063772dd824146101b557806389e64822146101d75780638aaf2686146101f95780638ead0c9a1461022657600080fd5b806301ffc9a7146101035780633548124b1461013857806343f231321461015a5780636d1884e014610188575b600080fd5b34801561010f57600080fd5b5061012361011e366004612c62565b610372565b60405190151581526020015b60405180910390f35b34801561014457600080fd5b5061014d610383565b60405161012f9190612e6f565b34801561016657600080fd5b5061017a610175366004612c30565b6105f7565b60405190815260200161012f565b34801561019457600080fd5b506101a86101a3366004612cf6565b610997565b60405161012f9190613171565b3480156101c157600080fd5b506101d56101d0366004612bd2565b610af5565b005b3480156101e357600080fd5b506101ec610e05565b60405161012f9190612f52565b34801561020557600080fd5b50610219610214366004612a88565b61102f565b60405161012f9190612ed0565b34801561023257600080fd5b506101d5610241366004612c30565b61131b565b34801561025257600080fd5b506101d5610261366004612d26565b611541565b6101d5610274366004612ba9565b6118e7565b34801561028557600080fd5b506102a5610294366004612aa2565b63bc197c8160e01b95945050505050565b6040516001600160e01b0319909116815260200161012f565b3480156102ca57600080fd5b5061014d611c18565b3480156102df57600080fd5b506102196102ee366004612cf6565b611e8b565b3480156102ff57600080fd5b506101ec61030e366004612cf6565b612085565b34801561031f57600080fd5b5061017a61032e366004612c8a565b612299565b6101d5610341366004612c30565b612452565b34801561035257600080fd5b506102a5610361366004612b47565b63f23a6e6160e01b95945050505050565b600061037d8261276b565b92915050565b6060600061039060015490565b905060008060005b838110156103f35733600360006103b08460016131b4565b81526020810191909152604001600020600501546001600160a01b031614156103e1576103de6001846131b4565b92505b806103eb8161325d565b915050610398565b506000826001600160401b0381111561041c57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561045557816020015b610442612852565b81526020019060019003908161043a5790505b50905060005b848110156105ee5733600360006104738460016131b4565b81526020810191909152604001600020600501546001600160a01b031614156105dc5760006104a38260016131b4565b90506000600360008381526020019081526020016000209050806040518060c0016040529081600082015481526020016001820180546104e290613222565b80601f016020809104026020016040519081016040528092919081815260200182805461050e90613222565b801561055b5780601f106105305761010080835404028352916020019161055b565b820191906000526020600020905b81548152906001019060200180831161053e57829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b031660809091015284518590879081106105c157634e487b7160e01b600052603260045260246000fd5b60209081029190910101526105d76001866131b4565b945050505b806105e68161325d565b91505061045b565b50949350505050565b604051627eeac760e11b81523360048201526024810183905260009081906001600160a01b0386169062fdd58e9060440160206040518083038186803b15801561064057600080fd5b505afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190612d0e565b116106e35760405162461bcd60e51b815260206004820152603060248201527f596f7520646f206e6f74206f776e20746865207469636b657420796f7520617260448201526f19481d1c9e5a5b99c81d1bc81b1a5cdd60821b60648201526084015b60405180910390fd5b6000838152600460205260409020600601548211156107765760405162461bcd60e51b815260206004820152604360248201527f526573616c652070726963652073686f756c64206e6f7420657863656564207460448201527f6865206d617820726573616c6520707269636520666f722074686973207469636064820152621ad95d60ea1b608482015260a4016106da565b600083815260066020908152604080832033845290915290205460ff16156107f45760405162461bcd60e51b815260206004820152602b60248201527f54686973207469636b65742068617320616c7265616479206265656e2075736560448201526a1908199bdc88195d995b9d60aa1b60648201526084016106da565b60008061080060025490565b90506001805b8080156108135750828211155b156108505760008281526005602052604090206004015460ff1615156001141561083e575091508160005b816108488161325d565b925050610806565b801561086a57610864600280546001019055565b60025493505b6040805160a08101825285815260208082018a815233838501818152606085018c81526000608087018181528c8252600590965287902095518655925160018087019190915590516002860180546001600160a01b0319166001600160a01b039283161790559251600386015592516004948501805460ff19169115159190911790559351637921219560e11b8152908c169363f242432a9361091593919230928e92909101612e37565b600060405180830381600087803b15801561092f57600080fd5b505af1158015610943573d6000803e3d6000fd5b505060408051338152602081018a905260008183015290518a93508792507f10162b7f8060fb4aab218f44d857dbcc081b02dffc4dd0ddc6068f616cb373b09181900360600190a350919695505050505050565b61099f612852565b6000828152600360205260409020546109fa5760405162461bcd60e51b815260206004820152601960248201527f54686973206576656e7420646f6573206e6f742065786973740000000000000060448201526064016106da565b600360008381526020019081526020016000206040518060c001604052908160008201548152602001600182018054610a3290613222565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5e90613222565b8015610aab5780601f10610a8057610100808354040283529160200191610aab565b820191906000526020600020905b815481529060010190602001808311610a8e57829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b031660809091015292915050565b600085815260046020908152604080832060010154835260039091529020600501546001600160a01b03163314610b9f5760405162461bcd60e51b815260206004820152604260248201527f596f7520646f206e6f7420746865206f776e20746865206576656e7420666f7260448201527f20746865207469636b657420747279696e6720746f2062652076616c69646174606482015261195960f21b608482015260a4016106da565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101859052600090605c0160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610c40573d6000803e3d6000fd5b505050602060405103519050610c8260405180604001604052806014815260200173029b4b3b730ba3ab9329030b2323932b9b9901e960651b815250826127a0565b604051627eeac760e11b81526001600160a01b03828116600483015260248201899052600091908a169062fdd58e9060440160206040518083038186803b158015610ccc57600080fd5b505afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d049190612d0e565b11610d515760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320646f6573206e6f74206f776e20746f6b656e00000000000060448201526064016106da565b60008781526006602090815260408083206001600160a01b038516845290915290205460ff1615610dce5760405162461bcd60e51b815260206004820152602160248201527f557365722068617320616c72656164792076616c696461746564207469636b656044820152601d60fa1b60648201526084016106da565b60009687526006602090815260408089206001600160a01b039093168952919052909520805460ff19166001179055505050505050565b60606000610e1260025490565b905060008060005b83811015610ea4573360056000610e328460016131b4565b81526020810191909152604001600020600201546001600160a01b0316148015610e7f575060056000610e668360016131b4565b815260208101919091526040016000206004015460ff16155b15610e9257610e8f6001846131b4565b92505b80610e9c8161325d565b915050610e1a565b506000826001600160401b03811115610ecd57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f0657816020015b610ef361289a565b815260200190600190039081610eeb5790505b50905060005b848110156105ee573360056000610f248460016131b4565b81526020810191909152604001600020600201546001600160a01b0316148015610f71575060056000610f588360016131b4565b815260208101919091526040016000206004015460ff16155b1561101d576000610f838260016131b4565b600081815260056020908152604091829020825160a0810184528154815260018201549281019290925260028101546001600160a01b03169282019290925260038201546060820152600482015460ff16151560808201528551929350909185908790811061100257634e487b7160e01b600052603260045260246000fd5b60209081029190910101526110186001866131b4565b945050505b806110278161325d565b915050610f0c565b6060600061103c60005490565b905060008060005b838110156111085760016001600160a01b03871662fdd58e3361106785856131b4565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b1580156110ab57600080fd5b505afa1580156110bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e39190612d0e565b106110f6576110f36001846131b4565b92505b806111008161325d565b915050611044565b506000826001600160401b0381111561113157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156111a257816020015b61118f6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161114f5790505b50905060005b848110156113115760016001600160a01b03881662fdd58e336111cb85856131b4565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b15801561120f57600080fd5b505afa158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112479190612d0e565b106112ff5760006112598260016131b4565b90506000600460008381526020019081526020016000209050806040518060e00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250508486815181106112e457634e487b7160e01b600052603260045260246000fd5b60209081029190910101526112fa6001866131b4565b945050505b806113098161325d565b9150506111a8565b5095945050505050565b600082815260046020819052604091829020600101549151627eeac760e11b815233918101919091526024810184905282906001600160a01b0386169062fdd58e9060440160206040518083038186803b15801561137857600080fd5b505afa15801561138c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b09190612d0e565b10156113ce5760405162461bcd60e51b81526004016106da90613031565b6000818152600360205260409020600501546001600160a01b031633146114335760405162461bcd60e51b8152602060048201526019602482015278165bdd48191bc81b9bdd081bdddb881d1a1a5cc8195d995b9d603a1b60448201526064016106da565b6000818152600360205260409020600201546001600160401b039081164290911611156114725760405162461bcd60e51b81526004016106da9061313a565b604051637921219560e11b81526001600160a01b0385169063f242432a906114a4903390309088908890600401612e37565b600060405180830381600087803b1580156114be57600080fd5b505af11580156114d2573d6000803e3d6000fd5b505050600082815260036020819052604090912001546114f4915083906131b4565b600082815260036020818152604080842090920193909355858252600492839052902001546115249083906131b4565b600093845260046020819052604090942090930192909255505050565b600083116115915760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c656173742031207765690000000060448201526064016106da565b604051627eeac760e11b81523360048201526024810188905284906001600160a01b0388169062fdd58e9060440160206040518083038186803b1580156115d757600080fd5b505afa1580156115eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160f9190612d0e565b101561162d5760405162461bcd60e51b81526004016106da90613031565b6000888152600360205260409020600501546001600160a01b031633146116925760405162461bcd60e51b8152602060048201526019602482015278165bdd48191bc81b9bdd081bdddb881d1a1a5cc8195d995b9d603a1b60448201526064016106da565b6000888152600360205260409020600201546001600160401b039081164290911611156116d15760405162461bcd60e51b81526004016106da9061313a565b60648211156117565760405162461bcd60e51b815260206004820152604560248201527f526f79616c747920666565206d75737420626520612070657263656e7461676560448201527f2c207468657265666f72652069742063616e2774206265206d6f72652074686160648201526406e203130360dc1b608482015260a4016106da565b611764600080546001019055565b6040518060e001604052808881526020018981526020018481526020018681526020018581526020018381526020018281525060046000898152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060155905050856001600160a01b031663f242432a33308a886040518563ffffffff1660e01b81526004016118259493929190612e37565b600060405180830381600087803b15801561183f57600080fd5b505af1158015611853573d6000803e3d6000fd5b50505060008981526003602081905260409091200154611875915085906131b4565b60008981526003602081815260409283902090910192909255805185815291820187905281018590526060810183905260808101829052889088907fc44cdb87b53b35fccd68bb206e5900d975bed5f74a2c7bf11e3ad4791d13334b9060a00160405180910390a35050505050505050565b60008181526005602081815260408084206003808201546001808401548089526004808852868a2080860154938101546002880154818d52968a52978b208a0154908a01549a8c90529890975295909301549096949592946001600160a01b0392831693909216919060ff16156119c65760405162461bcd60e51b815260206004820152603760248201527f54686973207469636b6574206973206e6f742063757272656e746c792062656960448201527f6e67207265736f6c64206f6e20746865206d61726b657400000000000000000060648201526084016106da565b604051627eeac760e11b8152336004820152602481018790526000906001600160a01b038b169062fdd58e9060440160206040518083038186803b158015611a0d57600080fd5b505afa158015611a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a459190612d0e565b611a4f908761320b565b11611a6c5760405162461bcd60e51b81526004016106da90613085565b863414611a8b5760405162461bcd60e51b81526004016106da906130f6565b6000848152600360205260409020600201546001600160401b03908116429091161115611aca5760405162461bcd60e51b81526004016106da9061313a565b600086815260066020908152604080832033808552925291829020805460ff191690559051637921219560e11b81526001600160a01b038b169163f242432a91611b1d9130918b90600190600401612e37565b600060405180830381600087803b158015611b3757600080fd5b505af1158015611b4b573d6000803e3d6000fd5b50505060008981526005602052905081611b6660648a6131cc565b611b7091906131ec565b90506000611b7e828a61320b565b6040519091506001600160a01b0386169082156108fc029083906000818181858888f19350505050158015611bb7573d6000803e3d6000fd5b506040516001600160a01b0385169083156108fc029084906000818181858888f19350505050158015611bee573d6000803e3d6000fd5b50505060009788525050600560205250506040909320600401805460ff1916600117905550505050565b60606000611c2560015490565b905060008060005b83811015611c8c5760036000611c448360016131b4565b81526020810191909152604001600020600201546001600160401b039081164290911611611c7a57611c776001846131b4565b92505b80611c848161325d565b915050611c2d565b506000826001600160401b03811115611cb557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611cee57816020015b611cdb612852565b815260200190600190039081611cd35790505b50905060005b848110156105ee5760036000611d0b8360016131b4565b81526020810191909152604001600020600201546001600160401b039081164290911611611e79576000611d408260016131b4565b90506000600360008381526020019081526020016000209050806040518060c001604052908160008201548152602001600182018054611d7f90613222565b80601f0160208091040260200160405190810160405280929190818152602001828054611dab90613222565b8015611df85780601f10611dcd57610100808354040283529160200191611df8565b820191906000526020600020905b815481529060010190602001808311611ddb57829003601f168201915b505050918352505060028201546001600160401b0316602082015260038201546040820152600482015460608201526005909101546001600160a01b03166080909101528451859087908110611e5e57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152611e746001866131b4565b945050505b80611e838161325d565b915050611cf4565b60606000611e9860005490565b905060008060005b83811015611ef0578560046000611eb88460016131b4565b8152602001908152602001600020600101541415611ede57611edb6001846131b4565b92505b80611ee88161325d565b915050611ea0565b506000826001600160401b03811115611f1957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611f8a57816020015b611f776040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200190600190039081611f375790505b50905060005b84811015611311578660046000611fa88460016131b4565b8152602001908152602001600020600101541415612073576000611fcd8260016131b4565b90506000600460008381526020019081526020016000209050806040518060e001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505084868151811061205857634e487b7160e01b600052603260045260246000fd5b602090810291909101015261206e6001866131b4565b945050505b8061207d8161325d565b915050611f90565b6060600061209260025490565b905060008060005b838110156121195785600560006120b28460016131b4565b8152602001908152602001600020600101541480156120f45750600560006120db8360016131b4565b815260208101919091526040016000206004015460ff16155b15612107576121046001846131b4565b92505b806121118161325d565b91505061209a565b506000826001600160401b0381111561214257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561217b57816020015b61216861289a565b8152602001906001900390816121605790505b50905060005b848110156113115786600560006121998460016131b4565b8152602001908152602001600020600101541480156121db5750600560006121c28360016131b4565b815260208101919091526040016000206004015460ff16155b156122875760006121ed8260016131b4565b600081815260056020908152604091829020825160a0810184528154815260018201549281019290925260028101546001600160a01b03169282019290925260038201546060820152600482015460ff16151560808201528551929350909185908790811061226c57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526122826001866131b4565b945050505b806122918161325d565b915050612181565b6000336122a557600080fd5b6122b7426001600160401b03166127e9565b6122c9826001600160401b03166127e9565b816001600160401b0316426001600160401b0316111561232b5760405162461bcd60e51b815260206004820152601760248201527f446174652068617320616c72656164792070617373656400000000000000000060448201526064016106da565b612339600180546001019055565b600061234460015490565b6040805160c08101825282815260208082018881526001600160401b03881683850152600060608401819052608084018190523360a08501528581526003835293909320825181559251805194955091936123a592600185019201906128d4565b5060408281015160028301805467ffffffffffffffff19166001600160401b03909216919091179055606083015160038301556080830151600483015560a090920151600590910180546001600160a01b0319166001600160a01b039092169190911790555181907fe798e3d1c981dccaa805cf4220c73e55a59c9fa14d08e15cb196809ca6576abb90612443908790879060009081903390612fe8565b60405180910390a29392505050565b60008281526004602081815260408084206002810154600380830154600190930154808852945294829020600501549151627eeac760e11b8152309481019490945260248401879052926001600160a01b039182169188169062fdd58e9060440160206040518083038186803b1580156124cb57600080fd5b505afa1580156124df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125039190612d0e565b85111561256a5760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420656e6f756768207469636b6574732072656d61696e696e67206f6e2060448201526e746865206d61726b6574706c61636560881b60648201526084016106da565b604051627eeac760e11b8152336004820152602481018790526001600160a01b0388169062fdd58e9060440160206040518083038186803b1580156125ae57600080fd5b505afa1580156125c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e69190612d0e565b6125f0908461320b565b85111561260f5760405162461bcd60e51b81526004016106da90613085565b61261985856131ec565b34146126375760405162461bcd60e51b81526004016106da906130f6565b6000828152600360205260409020600201546001600160401b039081164290911611156126765760405162461bcd60e51b81526004016106da9061313a565b600086815260066020908152604080832033808552925291829020805460ff191690559051637921219560e11b81526001600160a01b0389169163f242432a916126c89130918b908b90600401612e37565b600060405180830381600087803b1580156126e257600080fd5b505af11580156126f6573d6000803e3d6000fd5b505050600083815260036020526040902060040154612717915086906131b4565b6000838152600360205260408082206004019290925590516001600160a01b038316913480156108fc02929091818181858888f19350505050158015612761573d6000803e3d6000fd5b5050505050505050565b60006001600160e01b03198216630271189760e51b148061037d57506301ffc9a760e01b6001600160e01b031983161461037d565b6127e582826040516024016127b6929190612fbe565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052612831565b5050565b61282e816040516024016127ff91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052612831565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040518060c00160405280600081526020016060815260200160006001600160401b03168152602001600081526020016000815260200160006001600160a01b031681525090565b6040518060a00160405280600081526020016000815260200160006001600160a01b03168152602001600081526020016000151581525090565b8280546128e090613222565b90600052602060002090601f0160209004810192826129025760008555612948565b82601f1061291b57805160ff1916838001178555612948565b82800160010185558215612948579182015b8281111561294857825182559160200191906001019061292d565b50612954929150612958565b5090565b5b808211156129545760008155600101612959565b60006001600160401b038311156129865761298661328e565b612999601f8401601f1916602001613184565b90508281528383830111156129ad57600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146129db57600080fd5b919050565b600082601f8301126129f0578081fd5b813560206001600160401b03821115612a0b57612a0b61328e565b8160051b612a1a828201613184565b838152828101908684018388018501891015612a34578687fd5b8693505b85841015612a56578035835260019390930192918401918401612a38565b50979650505050505050565b600082601f830112612a72578081fd5b612a818383356020850161296d565b9392505050565b600060208284031215612a99578081fd5b612a81826129c4565b600080600080600060a08688031215612ab9578081fd5b612ac2866129c4565b9450612ad0602087016129c4565b935060408601356001600160401b0380821115612aeb578283fd5b612af789838a016129e0565b94506060880135915080821115612b0c578283fd5b612b1889838a016129e0565b93506080880135915080821115612b2d578283fd5b50612b3a88828901612a62565b9150509295509295909350565b600080600080600060a08688031215612b5e578081fd5b612b67866129c4565b9450612b75602087016129c4565b9350604086013592506060860135915060808601356001600160401b03811115612b9d578182fd5b612b3a88828901612a62565b60008060408385031215612bbb578182fd5b612bc4836129c4565b946020939093013593505050565b60008060008060008060c08789031215612bea578081fd5b612bf3876129c4565b95506020870135945060408701359350606087013560ff81168114612c16578182fd5b9598949750929560808101359460a0909101359350915050565b600080600060608486031215612c44578283fd5b612c4d846129c4565b95602085013595506040909401359392505050565b600060208284031215612c73578081fd5b81356001600160e01b031981168114612a81578182fd5b60008060408385031215612c9c578182fd5b82356001600160401b0380821115612cb2578384fd5b818501915085601f830112612cc5578384fd5b612cd48683356020850161296d565b9350602085013591508082168214612cea578283fd5b50809150509250929050565b600060208284031215612d07578081fd5b5035919050565b600060208284031215612d1f578081fd5b5051919050565b600080600080600080600080610100898b031215612d42578586fd5b8835975060208901359650612d5960408a016129c4565b979a96995096976060810135975060808101359660a0820135965060c0820135955060e0909101359350915050565b60008151808452815b81811015612dad57602081850181015186830182015201612d91565b81811115612dbe5782602083870101525b50601f01601f19169290920160200192915050565b805182526000602082015160c06020850152612df260c0850182612d88565b6040848101516001600160401b031690860152606080850151908601526080808501519086015260a0938401516001600160a01b031693909401929092525090919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015612ec357603f19888603018452612eb1858351612dd3565b94509285019290850190600101612e95565b5092979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612f455781518051855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0908101519085015260e09093019290850190600101612eed565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612f45578151805185528681015187860152858101516001600160a01b0316868601526060808201519086015260809081015115159085015260a09093019290850190600101612f6f565b604081526000612fd16040830185612d88565b905060018060a01b03831660208301529392505050565b60a081526000612ffb60a0830188612d88565b6001600160401b0396909616602083015250604081019390935260608301919091526001600160a01b0316608090910152919050565b60208082526034908201527f596f7520646f206e6f74206f776e20746865204e4654207469636b657420796f6040820152731d48185c99481d1c9e5a5b99c81d1bc81b1a5cdd60621b606082015260800190565b6020808252604b908201527f596f75206861766520657863656564656420746865206d6178696d756d20616d60408201527f6f756e74206f66207469636b65747320796f752061726520616c6c6f7765642060608201526a746f20707572636861736560a81b608082015260a00190565b60208082526024908201527f436f727265637420616d6f756e74206f66206d6f6e657920776173206e6f74206040820152631cd95b9d60e21b606082015260800190565b60208082526018908201527f4576656e742068617320616c7265616479207061737365640000000000000000604082015260600190565b602081526000612a816020830184612dd3565b604051601f8201601f191681016001600160401b03811182821017156131ac576131ac61328e565b604052919050565b600082198211156131c7576131c7613278565b500190565b6000826131e757634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561320657613206613278565b500290565b60008282101561321d5761321d613278565b500390565b600181811c9082168061323657607f821691505b6020821081141561325757634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561327157613271613278565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212206d8c22e8e5e5396e2b189c42dad4747467d094682fb21ade3b5c94a274f1048f64736f6c63430008040033";

type TicketMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketMarket__factory extends ContractFactory {
  constructor(...args: TicketMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TicketMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TicketMarket> {
    return super.deploy(overrides || {}) as Promise<TicketMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TicketMarket {
    return super.attach(address) as TicketMarket;
  }
  connect(signer: Signer): TicketMarket__factory {
    return super.connect(signer) as TicketMarket__factory;
  }
  static readonly contractName: "TicketMarket";
  public readonly contractName: "TicketMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketMarketInterface {
    return new utils.Interface(_abi) as TicketMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketMarket {
    return new Contract(address, _abi, signerOrProvider) as TicketMarket;
  }
}
